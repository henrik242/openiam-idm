<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="AuthenticationService" resourceRoot="" soapui-version="3.0.1" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="AuthenticationServiceSoapBinding" type="wsdl" bindingName="{urn:idm.openiam.org/srvc/auth/service}AuthenticationServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/idm-ws/idmsrvc/AuthenticationService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/idm-ws/idmsrvc/AuthenticationService?wsdl"><con:part><con:url>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="AuthenticationService" targetNamespace="urn:idm.openiam.org/srvc/auth/service" xmlns:ns1="http://service.auth.srvc.idm.openiam.org/" xmlns:ns2="http://cxf.apache.org/bindings/xformat" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="urn:idm.openiam.org/srvc/auth/service" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:import location="http://localhost:8080/idm-ws/idmsrvc/AuthenticationService?wsdl=AuthenticationService.wsdl" namespace="http://service.auth.srvc.idm.openiam.org/"></wsdl:import>
  <wsdl:binding name="AuthenticationServiceSoapBinding" type="ns1:AuthenticationService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="authenticateByToken">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="authenticateByToken">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="authenticateByTokenResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthenticationException">
        <soap:fault name="AuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateAppStatus">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateAppStatus">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateAppStatusResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="globalLogout">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="globalLogout">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="globalLogoutResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="LogoutException">
        <soap:fault name="LogoutException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="passwordAuth">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="passwordAuth">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="passwordAuthResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="AuthenticationException">
        <soap:fault name="AuthenticationException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateTokenByUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateTokenByUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateTokenByUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="validateToken">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="validateToken">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateTokenResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="AuthenticationService">
    <wsdl:port binding="tns:AuthenticationServiceSoapBinding" name="AuthenticationServicePort">
      <soap:address location="http://localhost:8080/idm-ws/idmsrvc/AuthenticationService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService?wsdl=AuthenticationService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="AuthenticationService" targetNamespace="http://service.auth.srvc.idm.openiam.org/" xmlns:ns1="http://service.auth.srvc.idm.openiam.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://service.auth.srvc.idm.openiam.org/" xmlns:tns="http://service.auth.srvc.idm.openiam.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:complexType name="Subject">
        <xs:sequence>
          <xs:element name="readOnly" type="xs:boolean"/>
          <xs:element name="expirationTime" type="xs:long"/>
          <xs:element name="resultCode" type="xs:int"/>
          <xs:element minOccurs="0" name="saml" type="xs:string"/>
          <xs:element minOccurs="0" name="samlType" type="xs:string"/>
          <xs:element name="daysToPwdExp" type="xs:int"/>
          <xs:element minOccurs="0" name="domainId" type="xs:string"/>
          <xs:element minOccurs="0" name="ssoToken" type="tns:SSOToken"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="groups" nillable="true" type="xs:anyType"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="roles" nillable="true" type="xs:anyType"/>
          <xs:element minOccurs="0" name="userId" type="xs:string"/>
          <xs:element minOccurs="0" name="principal" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="principals" nillable="true" type="xs:anyType"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="SSOToken">
        <xs:sequence>
          <xs:element minOccurs="0" name="tokenType" type="xs:string"/>
          <xs:element minOccurs="0" name="token" type="xs:string"/>
          <xs:element minOccurs="0" name="authLevel" type="xs:string"/>
          <xs:element minOccurs="0" name="provider" type="xs:string"/>
          <xs:element minOccurs="0" name="clientIP" type="xs:string"/>
          <xs:element minOccurs="0" name="principal" type="xs:string"/>
          <xs:element name="maxIdleTime" type="xs:int"/>
          <xs:element minOccurs="0" name="expirationTime" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="AuthenticationException" type="tns:AuthenticationException"/>
      <xs:complexType name="AuthenticationException">
        <xs:sequence>
          <xs:element name="exception" nillable="true" type="xs:anyType"/>
          <xs:element name="errorCode" nillable="true" type="xs:int"/>
          <xs:element name="errorMessage" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="LogoutException" type="tns:LogoutException"/>
      <xs:complexType name="LogoutException">
        <xs:sequence>
          <xs:element name="exception" nillable="true" type="xs:anyType"/>
          <xs:element name="errorCode" nillable="true" type="xs:int"/>
          <xs:element name="errorMessage" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="authenticateByToken" type="tns:authenticateByToken"/>
      <xs:complexType name="authenticateByToken">
        <xs:sequence>
          <xs:element minOccurs="0" name="userId" type="xs:string"/>
          <xs:element minOccurs="0" name="token" type="xs:string"/>
          <xs:element minOccurs="0" name="tokenType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="authenticateByTokenResponse" type="tns:authenticateByTokenResponse"/>
      <xs:complexType name="authenticateByTokenResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:Subject"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="updateAppStatus" type="tns:updateAppStatus"/>
      <xs:complexType name="updateAppStatus">
        <xs:sequence>
          <xs:element minOccurs="0" name="managedSysId" type="xs:string"/>
          <xs:element minOccurs="0" name="principal" type="xs:string"/>
          <xs:element minOccurs="0" name="status" type="xs:string"/>
          <xs:element minOccurs="0" name="sessionId" type="xs:string"/>
          <xs:element minOccurs="0" name="token" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="updateAppStatusResponse" type="tns:updateAppStatusResponse"/>
      <xs:complexType name="updateAppStatusResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="globalLogout" type="tns:globalLogout"/>
      <xs:complexType name="globalLogout">
        <xs:sequence>
          <xs:element minOccurs="0" name="userId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="globalLogoutResponse" type="tns:globalLogoutResponse"/>
      <xs:complexType name="globalLogoutResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:element name="validateTokenByUser" type="tns:validateTokenByUser"/>
      <xs:complexType name="validateTokenByUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="userId" type="xs:string"/>
          <xs:element minOccurs="0" name="token" type="xs:string"/>
          <xs:element minOccurs="0" name="tokenType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="validateTokenByUserResponse" type="tns:validateTokenByUserResponse"/>
      <xs:complexType name="validateTokenByUserResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="passwordAuth" type="tns:passwordAuth"/>
      <xs:complexType name="passwordAuth">
        <xs:sequence>
          <xs:element minOccurs="0" name="domainId" type="xs:string"/>
          <xs:element minOccurs="0" name="principal" type="xs:string"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="passwordAuthResponse" type="tns:passwordAuthResponse"/>
      <xs:complexType name="passwordAuthResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:Subject"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="validateToken" type="tns:validateToken"/>
      <xs:complexType name="validateToken">
        <xs:sequence>
          <xs:element minOccurs="0" name="principal" type="xs:string"/>
          <xs:element minOccurs="0" name="token" type="xs:string"/>
          <xs:element minOccurs="0" name="tokenType" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:element name="validateTokenResponse" type="tns:validateTokenResponse"/>
      <xs:complexType name="validateTokenResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:idm.openiam.org/srvc/grp/dto" xmlns:ns1="urn:idm.openiam.org/srvc/role/dto" xmlns:tns="urn:idm.openiam.org/srvc/grp/dto" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="urn:idm.openiam.org/srvc/role/dto"/>
      <xs:complexType name="Group">
        <xs:sequence>
          <xs:element minOccurs="0" name="roles" type="ns1:roleSet"/>
          <xs:element minOccurs="0" name="attributes" type="tns:groupAttributeMap"/>
          <xs:element minOccurs="0" name="companyId" type="xs:string"/>
          <xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="createdBy" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="groupClass" type="xs:string"/>
          <xs:element minOccurs="0" name="grpId" type="xs:string"/>
          <xs:element minOccurs="0" name="grpName" type="xs:string"/>
          <xs:element minOccurs="0" name="inheritFromParent" type="xs:boolean"/>
          <xs:element minOccurs="0" name="lastUpdate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="lastUpdatedBy" type="xs:string"/>
          <xs:element minOccurs="0" name="parentGrpId" type="xs:string"/>
          <xs:element minOccurs="0" name="provisionMethod" type="xs:string"/>
          <xs:element minOccurs="0" name="provisionObjName" type="xs:string"/>
          <xs:element minOccurs="0" name="status" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="subGroup" nillable="true" type="tns:Group"/>
          <xs:element minOccurs="0" name="metadataTypeId" type="xs:string"/>
          <xs:element minOccurs="0" name="selected" type="xs:string"/>
          <xs:element minOccurs="0" name="ownerId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="groupSet">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="groupObj" nillable="true">
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" name="group" type="tns:Group"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="groupAttributeMap">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="groupAttributeEntry" nillable="true">
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" name="groupAttribute" type="tns:GroupAttribute"/>
              </xs:sequence>
              <xs:attribute name="key" type="xs:string"/>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="GroupAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="id" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element minOccurs="0" name="metadataElementId" type="xs:string"/>
          <xs:element minOccurs="0" name="groupId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:idm.openiam.org/srvc/role/dto" xmlns:ns1="urn:idm.openiam.org/srvc/grp/dto" xmlns:tns="urn:idm.openiam.org/srvc/role/dto" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="urn:idm.openiam.org/srvc/grp/dto"/>
      <xs:complexType name="roleSet">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="roleObj" nillable="true">
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" name="role" type="tns:role"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="role">
        <xs:sequence>
          <xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
          <xs:element minOccurs="0" name="createdBy" type="xs:string"/>
          <xs:element minOccurs="0" name="description" type="xs:string"/>
          <xs:element minOccurs="0" name="groups" type="ns1:groupSet"/>
          <xs:element minOccurs="0" name="id" type="tns:roleId"/>
          <xs:element minOccurs="0" name="provisionObjName" type="xs:string"/>
          <xs:element minOccurs="0" name="parentRoleId" type="xs:string"/>
          <xs:element minOccurs="0" name="roleAttributes" type="tns:roleAttributeSet"/>
          <xs:element minOccurs="0" name="roleName" type="xs:string"/>
          <xs:element name="userAssociationMethod" type="xs:int"/>
          <xs:element minOccurs="0" name="metadataTypeId" type="xs:string"/>
          <xs:element minOccurs="0" name="ownerId" type="xs:string"/>
          <xs:element minOccurs="0" name="inheritFromParent" type="xs:int"/>
          <xs:element minOccurs="0" name="status" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="childRoles" nillable="true" type="tns:role"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="roleId">
        <xs:sequence>
          <xs:element minOccurs="0" name="roleId" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="roleAttributeSet">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="roleAttributeObj" nillable="true">
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" name="roleAttribute" type="tns:roleAttribute"/>
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="roleAttribute">
        <xs:sequence>
          <xs:element minOccurs="0" name="roleAttrId" type="xs:string"/>
          <xs:element minOccurs="0" name="serviceId" type="xs:string"/>
          <xs:element minOccurs="0" name="roleId" type="xs:string"/>
          <xs:element minOccurs="0" name="metadataElementId" type="xs:string"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element minOccurs="0" name="value" type="xs:string"/>
          <xs:element minOccurs="0" name="attrGroup" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="validateTokenByUser">
    <wsdl:part element="ns1:validateTokenByUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="passwordAuth">
    <wsdl:part element="ns1:passwordAuth" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="authenticateByTokenResponse">
    <wsdl:part element="ns1:authenticateByTokenResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="globalLogout">
    <wsdl:part element="ns1:globalLogout" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateTokenByUserResponse">
    <wsdl:part element="ns1:validateTokenByUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateTokenResponse">
    <wsdl:part element="ns1:validateTokenResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="LogoutException">
    <wsdl:part element="ns1:LogoutException" name="LogoutException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAppStatus">
    <wsdl:part element="ns1:updateAppStatus" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="authenticateByToken">
    <wsdl:part element="ns1:authenticateByToken" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="passwordAuthResponse">
    <wsdl:part element="ns1:passwordAuthResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="AuthenticationException">
    <wsdl:part element="ns1:AuthenticationException" name="AuthenticationException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateToken">
    <wsdl:part element="ns1:validateToken" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAppStatusResponse">
    <wsdl:part element="ns1:updateAppStatusResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="globalLogoutResponse">
    <wsdl:part element="ns1:globalLogoutResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="AuthenticationService">
    <wsdl:operation name="authenticateByToken">
      <wsdl:input message="ns1:authenticateByToken" name="authenticateByToken"></wsdl:input>
      <wsdl:output message="ns1:authenticateByTokenResponse" name="authenticateByTokenResponse"></wsdl:output>
      <wsdl:fault message="ns1:AuthenticationException" name="AuthenticationException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateAppStatus">
      <wsdl:input message="ns1:updateAppStatus" name="updateAppStatus"></wsdl:input>
      <wsdl:output message="ns1:updateAppStatusResponse" name="updateAppStatusResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="globalLogout">
      <wsdl:input message="ns1:globalLogout" name="globalLogout"></wsdl:input>
      <wsdl:output message="ns1:globalLogoutResponse" name="globalLogoutResponse"></wsdl:output>
      <wsdl:fault message="ns1:LogoutException" name="LogoutException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateTokenByUser">
      <wsdl:input message="ns1:validateTokenByUser" name="validateTokenByUser"></wsdl:input>
      <wsdl:output message="ns1:validateTokenByUserResponse" name="validateTokenByUserResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="passwordAuth">
      <wsdl:input message="ns1:passwordAuth" name="passwordAuth"></wsdl:input>
      <wsdl:output message="ns1:passwordAuthResponse" name="passwordAuthResponse"></wsdl:output>
      <wsdl:fault message="ns1:AuthenticationException" name="AuthenticationException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateToken">
      <wsdl:input message="ns1:validateToken" name="validateToken"></wsdl:input>
      <wsdl:output message="ns1:validateTokenResponse" name="validateTokenResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="authenticateByToken" bindingOperationName="authenticateByToken" type="Request-Response" outputName="authenticateByTokenResponse" inputName="authenticateByToken" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:authenticateByToken>
         <!--Optional:-->
         <userId>?</userId>
         <!--Optional:-->
         <token>?</token>
         <!--Optional:-->
         <tokenType>?</tokenType>
      </ser:authenticateByToken>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/authenticateByToken"/></con:call></con:operation><con:operation isOneWay="false" action="" name="globalLogout" bindingOperationName="globalLogout" type="Request-Response" outputName="globalLogoutResponse" inputName="globalLogout" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:globalLogout>
         <!--Optional:-->
         <userId>?</userId>
      </ser:globalLogout>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/globalLogout"/></con:call></con:operation><con:operation isOneWay="false" action="" name="passwordAuth" bindingOperationName="passwordAuth" type="Request-Response" outputName="passwordAuthResponse" inputName="passwordAuth" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:passwordAuth>
         <!--Optional:-->
         <domainId>?</domainId>
         <!--Optional:-->
         <principal>?</principal>
         <!--Optional:-->
         <password>?</password>
      </ser:passwordAuth>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/passwordAuth"/></con:call></con:operation><con:operation isOneWay="false" action="" name="updateAppStatus" bindingOperationName="updateAppStatus" type="Request-Response" outputName="updateAppStatusResponse" inputName="updateAppStatus" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:updateAppStatus>
         <!--Optional:-->
         <managedSysId>?</managedSysId>
         <!--Optional:-->
         <principal>?</principal>
         <!--Optional:-->
         <status>?</status>
         <!--Optional:-->
         <sessionId>?</sessionId>
         <!--Optional:-->
         <token>?</token>
      </ser:updateAppStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/updateAppStatus"/></con:call></con:operation><con:operation isOneWay="false" action="" name="validateToken" bindingOperationName="validateToken" type="Request-Response" outputName="validateTokenResponse" inputName="validateToken" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:validateToken>
         <!--Optional:-->
         <principal>?</principal>
         <!--Optional:-->
         <token>?</token>
         <!--Optional:-->
         <tokenType>?</tokenType>
      </ser:validateToken>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/validateToken"/></con:call></con:operation><con:operation isOneWay="false" action="" name="validateTokenByUser" bindingOperationName="validateTokenByUser" type="Request-Response" outputName="validateTokenByUserResponse" inputName="validateTokenByUser" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:validateTokenByUser>
         <!--Optional:-->
         <userId>?</userId>
         <!--Optional:-->
         <token>?</token>
         <!--Optional:-->
         <tokenType>?</tokenType>
      </ser:validateTokenByUser>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/validateTokenByUser"/></con:call></con:operation></con:interface><con:testSuite name="AuthenticationServiceSoapBinding TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="authenticateByToken TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="authenticateByToken"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>authenticateByToken</con:operation><con:request name="authenticateByToken"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:authenticateByToken>
         <!--Optional:-->
         <userId>?</userId>
         <!--Optional:-->
         <token>?</token>
         <!--Optional:-->
         <tokenType>?</tokenType>
      </ser:authenticateByToken>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/authenticateByToken"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="globalLogout TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="globalLogout"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>globalLogout</con:operation><con:request name="globalLogout"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:globalLogout>
         <!--Optional:-->
         <userId>?</userId>
      </ser:globalLogout>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/globalLogout"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="passwordAuth TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="passwordAuth"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>passwordAuth</con:operation><con:request name="passwordAuth"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:passwordAuth>
         <domainId>USR_SEC_DOMAIN</domainId>
         <principal>snelson</principal>
         <password>passwd00</password>
      </ser:passwordAuth>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/passwordAuth" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="updateAppStatus TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="updateAppStatus"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>updateAppStatus</con:operation><con:request name="updateAppStatus"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:updateAppStatus>
         <!--Optional:-->
         <managedSysId>?</managedSysId>
         <!--Optional:-->
         <principal>?</principal>
         <!--Optional:-->
         <status>?</status>
         <!--Optional:-->
         <sessionId>?</sessionId>
         <!--Optional:-->
         <token>?</token>
      </ser:updateAppStatus>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/updateAppStatus"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="validateToken TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="validateToken"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>validateToken</con:operation><con:request name="validateToken"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:validateToken>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <principal>test.user2</principal><token>0be31110e5b7acd910f32d91117da17b85029cee8725dc2</token><tokenType>OPENIAM_TOKEN</tokenType>
      </ser:validateToken>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/validateToken" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="validateTokenByUser TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="validateTokenByUser"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>validateTokenByUser</con:operation><con:request name="validateTokenByUser"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:validateTokenByUser>
         <!--Optional:-->
         
         <!--Optional:-->
         
         <!--Optional:-->
         <userId>301</userId><token>0be31110e5b7acd910f32d911117da17b85029ce8725dc2</token><tokenType>OPENIAM_TOKEN</tokenType>
      </ser:validateTokenByUser>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/validateTokenByUser" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="InvalidPassword TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="passwordAuth"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>passwordAuth</con:operation><con:request name="passwordAuth"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:passwordAuth>
         <!--Optional:-->
         
         <!--Optional:-->
         <domainId>USR_SEC_DOMAIN</domainId>
         <!--Optional:-->
         <principal>snelson</principal><password>passwd01</password>
      </ser:passwordAuth>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/passwordAuth" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="LockedUser TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="passwordAuth"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>passwordAuth</con:operation><con:request name="passwordAuth"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:passwordAuth>
         <!--Optional:-->
         
         <!--Optional:-->
         <domainId>USR_SEC_DOMAIN</domainId>
         <!--Optional:-->
         <principal>test.user3</principal><password>passwd00</password>
      </ser:passwordAuth>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/passwordAuth" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="DisableUser TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="passwordAuth"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>passwordAuth</con:operation><con:request name="passwordAuth"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:passwordAuth>
         <!--Optional:-->
         
         <!--Optional:-->
         <domainId>USR_SEC_DOMAIN</domainId>
         <!--Optional:-->
         <principal>test.user4</principal><password>passwd00</password>
      </ser:passwordAuth>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/passwordAuth" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="InactiveUser TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="passwordAuth"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>passwordAuth</con:operation><con:request name="passwordAuth"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:passwordAuth>
         <!--Optional:-->
         
         <!--Optional:-->
         <domainId>USR_SEC_DOMAIN</domainId>
         <!--Optional:-->
         <principal>test.user5</principal><password>passwd00</password>
      </ser:passwordAuth>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/passwordAuth" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ExpiredPassword TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="passwordAuth"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>passwordAuth</con:operation><con:request name="passwordAuth"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:passwordAuth>
         <!--Optional:-->
         
         <!--Optional:-->
         <domainId>USR_SEC_DOMAIN</domainId>
         <!--Optional:-->
         <principal>test.user7</principal><password>passwd00</password>
      </ser:passwordAuth>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/passwordAuth" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ExpirePassword30 TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="passwordAuth"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>passwordAuth</con:operation><con:request name="passwordAuth"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:passwordAuth>
         <!--Optional:-->
         
         <!--Optional:-->
         <domainId>USR_SEC_DOMAIN</domainId>
         <!--Optional:-->
         <principal>test.user6</principal><password>passwd00</password>
      </ser:passwordAuth>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/passwordAuth" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="InvalidUserPasswordAuth TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="passwordAuth"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>passwordAuth</con:operation><con:request name="passwordAuth"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<saml2:Assertion ID="acae8abb69174e258bd1e746aa2a8a45" IssueInstant="2010-03-01T05:03:23.113Z" Version="2.0" xmlns="openiam" xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"><saml2:Issuer>openiam</saml2:Issuer><saml2:Subject><saml2:NameID Format="NameIdentifierType" NameQualifier="openiam">3006</saml2:NameID></saml2:Subject><saml2:Conditions NotBefore="2010-03-01T05:03:23.113Z" NotOnOrAfter="2010-03-01T05:33:23.684Z"/><saml2:AuthnStatement AuthnInstant="2010-03-01T05:03:23.113Z"><saml2:AuthnContext><saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml2:AuthnContextClassRef></saml2:AuthnContext></saml2:AuthnStatement></saml2:Assertion>]]]]>><![CDATA[</token>

]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/passwordAuth" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="passwordAuthWithADLogin TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="passwordAuth"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>passwordAuth</con:operation><con:request name="passwordAuth"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:passwordAuth>
         
         <domainId>USR_SEC_DOMAIN</domainId><principal>test.user6</principal><password>sasny$257</password>
         
      </ser:passwordAuth>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/passwordAuth" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="validateSamlToken TestCase" searchProperties="true"><con:settings/><con:testStep type="request" name="validateToken"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AuthenticationServiceSoapBinding</con:interface><con:operation>validateToken</con:operation><con:request name="validateToken"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/idm-ws/idmsrvc/AuthenticationService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.auth.srvc.idm.openiam.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:validateToken>
         <principal>snelson</principal>
         <token><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<saml2:Assertion ID="dac76315c815492a9a55afbecac647ec" IssueInstant="2010-03-01T16:44:29.701Z" Version="2.0" xmlns:saml2="urn:oasis:names:tc:SAML:2.0:assertion"><saml2:Issuer>openiam</saml2:Issuer><saml2:Subject><saml2:NameID Format="urn:oasis:names:tc:SAML:2.0:nameid-format:entity" NameQualifier="openiam">snelson</saml2:NameID></saml2:Subject><saml2:Conditions NotBefore="2010-03-01T16:44:29.701Z" NotOnOrAfter="2010-03-01T17:14:30.283Z"/><saml2:AuthnStatement AuthnInstant="2010-03-01T16:44:29.701Z"><saml2:AuthnContext><saml2:AuthnContextClassRef>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</saml2:AuthnContextClassRef></saml2:AuthnContext></saml2:AuthnStatement></saml2:Assertion>]]]]>><![CDATA[</token>
         <tokenType>SAML2_TOKEN</tokenType>
      </ser:validateToken>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig action="urn:idm.openiam.org/srvc/auth/service/AuthenticationService/validateToken" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>