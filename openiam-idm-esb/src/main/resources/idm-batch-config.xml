<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
 			xmlns:context="http://www.springframework.org/schema/context"	
      xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
       http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/3.1/mule-quartz.xsd">
 
   <flow name="oneMinuteFlow">
	  <description>
		  This configuration will create an inbound event for testService2 every 1 minute indefinitely. 
		  The event payload will always have the same value, which the contents of the file 'payload-data.txt'. The file can be on the classpath of on the local file system.
	  </description>
	  
    <quartz:inbound-endpoint name="minuteTrigger" repeatInterval="60000"  
    		startDelay="10000" jobName="minuteJob" >
          	 <quartz:event-generator-job>
	          	 <quartz:payload>MINUTE</quartz:payload>
          	 </quartz:event-generator-job>
    </quartz:inbound-endpoint>
  	<component>
		  <entry-point-resolver-set>
				<reflection-entry-point-resolver/>
				<method-entry-point-resolver>
						<include-entry-point method="execute"/>
				</method-entry-point-resolver>
			</entry-point-resolver-set>
			<spring-object bean="intervalTask" />
	</component>

  </flow>


  <flow name="fiveMinuteFlow">
	  <description>
		  This configuration will create an inbound event for testService2 every 1 minute indefinitely. 
		  The event payload will always have the same value, which the contents of the file 'payload-data.txt'. The file can be on the classpath of on the local file system.
	  </description>
	  
    <quartz:inbound-endpoint name="fiveMinuteTrigger" repeatInterval="300000"  
    		startDelay="175000" jobName="fiveMinuteJob" >
          	 <quartz:event-generator-job>
	          	 <quartz:payload>5MIN</quartz:payload>
          	 </quartz:event-generator-job>
    </quartz:inbound-endpoint>
  	<component>
		  <entry-point-resolver-set>
				<reflection-entry-point-resolver/>
				<method-entry-point-resolver>
						<include-entry-point method="execute"/>
				</method-entry-point-resolver>
		  </entry-point-resolver-set>
		  <spring-object bean="intervalTask" />
	</component>
  </flow>     
     
  <flow name="fifteenMinuteFlow">
	  <description>
		  This configuration will create an inbound event for testService2 every 1 minute indefinitely. 
		  The event payload will always have the same value, which the contents of the file 'payload-data.txt'. The file can be on the classpath of on the local file system.
	  </description>
	  
    <quartz:inbound-endpoint name="fifteenMinuteTrigger" repeatInterval="900000"  
    		startDelay="200000" jobName="fifteenMinuteJob" >
          	 <quartz:event-generator-job>
	          	 <quartz:payload>15MIN</quartz:payload>
          	 </quartz:event-generator-job>
    </quartz:inbound-endpoint>
  	<component>
		  <entry-point-resolver-set>
				<reflection-entry-point-resolver/>
				<method-entry-point-resolver>
						<include-entry-point method="execute"/>
				</method-entry-point-resolver>
		  </entry-point-resolver-set>
		  <spring-object bean="intervalTask" />
	</component>
  </flow> 

  <flow name="sixtyMinuteFlow">
	  <description>
		  This configuration will create an inbound event for testService2 every 1 minute indefinitely. 
		  The event payload will always have the same value, which the contents of the file 'payload-data.txt'. The file can be on the classpath of on the local file system.
	  </description>
	  
    <quartz:inbound-endpoint name="sixtyMinuteTrigger" repeatInterval="3600000"  
    		startDelay="220000" jobName="hourJob" >
          	 <quartz:event-generator-job>
	          	 <quartz:payload>60MIN</quartz:payload>
          	 </quartz:event-generator-job>
    </quartz:inbound-endpoint>
  	<component>
		  <entry-point-resolver-set>
				<reflection-entry-point-resolver/>
				<method-entry-point-resolver>
						<include-entry-point method="execute"/>
				</method-entry-point-resolver>
		  </entry-point-resolver-set>
		  <spring-object bean="intervalTask" />
	</component>
  </flow> 

 <flow name="nightlyTaskFlow">
	  <description>
		  This configuration will create an inbound event for testService2 every 1 minute indefinitely. 
		  The event payload will always have the same value, which the contents of the file 'payload-data.txt'. The file can be on the classpath of on the local file system.
	  </description>
	  
    <quartz:inbound-endpoint name="nightlyTrigger" cronExpression="0 0 1 * * ?"   jobName="nightlyJob" >
          	 <quartz:event-generator-job/>

    </quartz:inbound-endpoint>
  	<component>
		  <entry-point-resolver-set>
				<reflection-entry-point-resolver/>
				<method-entry-point-resolver>
						<include-entry-point method="execute"/>
				</method-entry-point-resolver>
		  </entry-point-resolver-set>
		  <spring-object bean="nightlyTask" />
	</component>
  </flow> 
        
</mule>

