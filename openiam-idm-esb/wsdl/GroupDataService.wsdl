<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="GroupDataWebServiceService" targetNamespace="urn:idm.openiam.org/srvc/grp/service" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:idm.openiam.org/srvc/grp/service" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:idm.openiam.org/srvc/continfo/dto" xmlns:ns2="urn:idm.openiam.org/srvc/grp/service" xmlns:tns="urn:idm.openiam.org/srvc/user/dto" elementFormDefault="qualified" targetNamespace="urn:idm.openiam.org/srvc/user/dto" version="1.0">
<xs:import namespace="urn:idm.openiam.org/srvc/continfo/dto"/>
<xs:import namespace="urn:idm.openiam.org/srvc/grp/service"/>
<xs:complexType name="user">
<xs:complexContent>
<xs:extension base="ns2:BaseObject">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="addresses" nillable="true" type="ns1:address"/>
<xs:element minOccurs="0" name="birthdate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="companyId" type="xs:string"/>
<xs:element minOccurs="0" name="companyOwnerId" type="xs:string"/>
<xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createdBy" type="xs:string"/>
<xs:element minOccurs="0" name="deptCd" type="xs:string"/>
<xs:element minOccurs="0" name="deptName" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="emailAddresses" nillable="true" type="ns1:emailAddress"/>
<xs:element minOccurs="0" name="employeeId" type="xs:string"/>
<xs:element minOccurs="0" name="employeeType" type="xs:string"/>
<xs:element minOccurs="0" name="firstName" type="xs:string"/>
<xs:element minOccurs="0" name="jobCode" type="xs:string"/>
<xs:element minOccurs="0" name="lastName" type="xs:string"/>
<xs:element minOccurs="0" name="lastUpdate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="lastUpdatedBy" type="xs:string"/>
<xs:element minOccurs="0" name="locationCd" type="xs:string"/>
<xs:element minOccurs="0" name="locationName" type="xs:string"/>
<xs:element minOccurs="0" name="managerId" type="xs:string"/>
<xs:element minOccurs="0" name="metadataTypeId" type="xs:string"/>
<xs:element minOccurs="0" name="classification" type="xs:string"/>
<xs:element minOccurs="0" name="middleInit" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="phones" nillable="true" type="ns1:phone"/>
<xs:element minOccurs="0" name="prefix" type="xs:string"/>
<xs:element minOccurs="0" name="sex" type="xs:string"/>
<xs:element minOccurs="0" name="status" type="tns:UserStatus"/>
<xs:element minOccurs="0" name="secondaryStatus" type="tns:UserStatus"/>
<xs:element minOccurs="0" name="suffix" type="xs:string"/>
<xs:element minOccurs="0" name="title" type="xs:string"/>
<xs:element minOccurs="0" name="userAttributes" type="tns:userAttributeMap"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
<xs:element minOccurs="0" name="userTypeInd" type="xs:string"/>
<xs:element minOccurs="0" name="userNotes" type="tns:userNoteSet"/>
<xs:element minOccurs="0" name="division" type="xs:string"/>
<xs:element minOccurs="0" name="costCenter" type="xs:string"/>
<xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="lastDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="mailCode" type="xs:string"/>
<xs:element minOccurs="0" name="nickname" type="xs:string"/>
<xs:element minOccurs="0" name="maidenName" type="xs:string"/>
<xs:element minOccurs="0" name="passwordTheme" type="xs:string"/>
<xs:element minOccurs="0" name="country" type="xs:string"/>
<xs:element minOccurs="0" name="bldgNum" type="xs:string"/>
<xs:element minOccurs="0" name="streetDirection" type="xs:string"/>
<xs:element minOccurs="0" name="suite" type="xs:string"/>
<xs:element minOccurs="0" name="address1" type="xs:string"/>
<xs:element minOccurs="0" name="address2" type="xs:string"/>
<xs:element minOccurs="0" name="address3" type="xs:string"/>
<xs:element minOccurs="0" name="address4" type="xs:string"/>
<xs:element minOccurs="0" name="address5" type="xs:string"/>
<xs:element minOccurs="0" name="address6" type="xs:string"/>
<xs:element minOccurs="0" name="address7" type="xs:string"/>
<xs:element minOccurs="0" name="city" type="xs:string"/>
<xs:element minOccurs="0" name="state" type="xs:string"/>
<xs:element minOccurs="0" name="postalCd" type="xs:string"/>
<xs:element minOccurs="0" name="email" type="xs:string"/>
<xs:element minOccurs="0" name="showInSearch" type="xs:int"/>
<xs:element minOccurs="0" name="delAdmin" type="xs:int"/>
<xs:element minOccurs="0" name="areaCd" type="xs:string"/>
<xs:element minOccurs="0" name="countryCd" type="xs:string"/>
<xs:element minOccurs="0" name="phoneNbr" type="xs:string"/>
<xs:element minOccurs="0" name="phoneExt" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="principalList" nillable="true" type="ns2:Login"/>
<xs:element minOccurs="0" name="supervisor" type="tns:supervisor"/>
<xs:element minOccurs="0" name="alternateContactId" type="xs:string"/>
<xs:element minOccurs="0" name="securityDomain" type="xs:string"/>
<xs:element minOccurs="0" name="userOwnerId" type="xs:string"/>
<xs:element minOccurs="0" name="datePasswordChanged" type="xs:dateTime"/>
<xs:element minOccurs="0" name="dateChallengeRespChanged" type="xs:dateTime"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="userAttributeMap">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="userAttributeEntry" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="userAttribute" type="tns:userAttribute"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="userAttribute">
<xs:complexContent>
<xs:extension base="ns2:BaseObject">
<xs:sequence>
<xs:element minOccurs="0" name="id" type="xs:string"/>
<xs:element minOccurs="0" name="metadataElementId" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:element minOccurs="0" name="attrGroup" type="xs:string"/>
<xs:element minOccurs="0" name="operation" type="ns2:AttributeOperationEnum"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="userNoteSet">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="userNoteItem" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="userNote" type="tns:userNote"/>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="userNote">
<xs:sequence>
<xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createdBy" type="xs:string"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="noteType" type="xs:string"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
<xs:element minOccurs="0" name="userNoteId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="supervisor">
<xs:sequence>
<xs:element minOccurs="0" name="comments" type="xs:string"/>
<xs:element minOccurs="0" name="employee" type="tns:user"/>
<xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="isPrimarySuper" type="xs:int"/>
<xs:element minOccurs="0" name="orgStructureId" type="xs:string"/>
<xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="status" type="xs:string"/>
<xs:element minOccurs="0" name="supervisor" type="tns:user"/>
<xs:element minOccurs="0" name="supervisorType" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="UserStatus">
<xs:restriction base="xs:string">
<xs:enumeration value="active"/>
<xs:enumeration value="inactive"/>
<xs:enumeration value="pending_start_date"/>
<xs:enumeration value="pending_approval"/>
<xs:enumeration value="approval_declined"/>
<xs:enumeration value="pending_user_validation"/>
<xs:enumeration value="pending_initial_login"/>
<xs:enumeration value="terminate"/>
<xs:enumeration value="deleted"/>
<xs:enumeration value="locked"/>
<xs:enumeration value="locked_admin"/>
<xs:enumeration value="disabled"/>
<xs:enumeration value="retired"/>
<xs:enumeration value="leave"/>
</xs:restriction>
</xs:simpleType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:idm.openiam.org/srvc/grp/dto" xmlns:ns2="urn:idm.openiam.org/srvc/grp/service" xmlns:tns="urn:idm.openiam.org/srvc/role/dto" elementFormDefault="qualified" targetNamespace="urn:idm.openiam.org/srvc/role/dto" version="1.0">
<xs:import namespace="urn:idm.openiam.org/srvc/grp/dto"/>
<xs:import namespace="urn:idm.openiam.org/srvc/grp/service"/>
<xs:element name="Role" type="tns:role"/>
<xs:complexType name="roleSet">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="roleObj" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="role" type="tns:role"/>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="role">
<xs:complexContent>
<xs:extension base="ns2:BaseObject">
<xs:sequence>
<xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createdBy" type="xs:string"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="groups" type="ns1:groupSet"/>
<xs:element minOccurs="0" name="id" type="tns:roleId"/>
<xs:element minOccurs="0" name="provisionObjName" type="xs:string"/>
<xs:element minOccurs="0" name="parentRoleId" type="xs:string"/>
<xs:element minOccurs="0" name="roleAttributes" type="tns:roleAttributeSet"/>
<xs:element minOccurs="0" name="roleName" type="xs:string"/>
<xs:element name="userAssociationMethod" type="xs:int"/>
<xs:element minOccurs="0" name="metadataTypeId" type="xs:string"/>
<xs:element minOccurs="0" name="ownerId" type="xs:string"/>
<xs:element minOccurs="0" name="inheritFromParent" type="xs:int"/>
<xs:element minOccurs="0" name="status" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="childRoles" nillable="true" type="tns:role"/>
<xs:element minOccurs="0" name="selected" type="xs:boolean"/>
<xs:element minOccurs="0" name="internalRoleId" type="xs:string"/>
<xs:element minOccurs="0" name="operation" type="ns2:AttributeOperationEnum"/>
<xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="rolePolicy" nillable="true" type="tns:RolePolicy"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="roleId">
<xs:sequence>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="serviceId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="roleAttributeSet">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="roleAttributeObj" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="roleAttribute" type="tns:roleAttribute"/>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="roleAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="roleAttrId" type="xs:string"/>
<xs:element minOccurs="0" name="serviceId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="metadataElementId" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:element minOccurs="0" name="attrGroup" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RolePolicy">
<xs:complexContent>
<xs:extension base="ns2:BaseObject">
<xs:sequence>
<xs:element minOccurs="0" name="rolePolicyId" type="xs:string"/>
<xs:element minOccurs="0" name="serviceId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="value1" type="xs:string"/>
<xs:element minOccurs="0" name="value2" type="xs:string"/>
<xs:element minOccurs="0" name="action" type="xs:string"/>
<xs:element minOccurs="0" name="executionOrder" type="xs:int"/>
<xs:element minOccurs="0" name="policyScript" type="xs:string"/>
<xs:element minOccurs="0" name="actionQualifier" type="xs:string"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:idm.openiam.org/srvc/grp/dto" xmlns:ns2="urn:idm.openiam.org/srvc/user/dto" xmlns:tns="urn:idm.openiam.org/srvc/grp/service" elementFormDefault="unqualified" targetNamespace="urn:idm.openiam.org/srvc/grp/service" version="1.0">
<xs:import namespace="urn:idm.openiam.org/srvc/grp/dto"/>
<xs:import namespace="urn:idm.openiam.org/srvc/user/dto"/>
<xs:element name="addAttribute" type="tns:addAttribute"/>
<xs:element name="addAttributeResponse" type="tns:addAttributeResponse"/>
<xs:element name="addGroup" type="tns:addGroup"/>
<xs:element name="addGroupResponse" type="tns:addGroupResponse"/>
<xs:element name="addUserToGroup" type="tns:addUserToGroup"/>
<xs:element name="addUserToGroupResponse" type="tns:addUserToGroupResponse"/>
<xs:element name="getAllAttributes" type="tns:getAllAttributes"/>
<xs:element name="getAllAttributesResponse" type="tns:getAllAttributesResponse"/>
<xs:element name="getAllGroups" type="tns:getAllGroups"/>
<xs:element name="getAllGroupsResponse" type="tns:getAllGroupsResponse"/>
<xs:element name="getAllGroupsWithDependents" type="tns:getAllGroupsWithDependents"/>
<xs:element name="getAllGroupsWithDependentsResponse" type="tns:getAllGroupsWithDependentsResponse"/>
<xs:element name="getAttribute" type="tns:getAttribute"/>
<xs:element name="getAttributeResponse" type="tns:getAttributeResponse"/>
<xs:element name="getChildGroups" type="tns:getChildGroups"/>
<xs:element name="getChildGroupsResponse" type="tns:getChildGroupsResponse"/>
<xs:element name="getGroup" type="tns:getGroup"/>
<xs:element name="getGroupResponse" type="tns:getGroupResponse"/>
<xs:element name="getGroupWithDependants" type="tns:getGroupWithDependants"/>
<xs:element name="getGroupWithDependantsResponse" type="tns:getGroupWithDependantsResponse"/>
<xs:element name="getGroupsNotLinkedToUser" type="tns:getGroupsNotLinkedToUser"/>
<xs:element name="getGroupsNotLinkedToUserResponse" type="tns:getGroupsNotLinkedToUserResponse"/>
<xs:element name="getParentGroup" type="tns:getParentGroup"/>
<xs:element name="getParentGroupResponse" type="tns:getParentGroupResponse"/>
<xs:element name="getUserInGroups" type="tns:getUserInGroups"/>
<xs:element name="getUserInGroupsAsFlatList" type="tns:getUserInGroupsAsFlatList"/>
<xs:element name="getUserInGroupsAsFlatListResponse" type="tns:getUserInGroupsAsFlatListResponse"/>
<xs:element name="getUserInGroupsResponse" type="tns:getUserInGroupsResponse"/>
<xs:element name="getUsersByGroup" type="tns:getUsersByGroup"/>
<xs:element name="getUsersByGroupResponse" type="tns:getUsersByGroupResponse"/>
<xs:element name="isUserInGroup" type="tns:isUserInGroup"/>
<xs:element name="isUserInGroupResponse" type="tns:isUserInGroupResponse"/>
<xs:element name="removeAllAttributes" type="tns:removeAllAttributes"/>
<xs:element name="removeAllAttributesResponse" type="tns:removeAllAttributesResponse"/>
<xs:element name="removeAttribute" type="tns:removeAttribute"/>
<xs:element name="removeAttributeResponse" type="tns:removeAttributeResponse"/>
<xs:element name="removeChildGroups" type="tns:removeChildGroups"/>
<xs:element name="removeChildGroupsResponse" type="tns:removeChildGroupsResponse"/>
<xs:element name="removeGroup" type="tns:removeGroup"/>
<xs:element name="removeGroupResponse" type="tns:removeGroupResponse"/>
<xs:element name="removeUserFromGroup" type="tns:removeUserFromGroup"/>
<xs:element name="removeUserFromGroupResponse" type="tns:removeUserFromGroupResponse"/>
<xs:element name="saveAttributes" type="tns:saveAttributes"/>
<xs:element name="saveAttributesResponse" type="tns:saveAttributesResponse"/>
<xs:element name="search" type="tns:search"/>
<xs:element name="searchResponse" type="tns:searchResponse"/>
<xs:element name="updateAttribute" type="tns:updateAttribute"/>
<xs:element name="updateAttributeResponse" type="tns:updateAttributeResponse"/>
<xs:element name="updateGroup" type="tns:updateGroup"/>
<xs:element name="updateGroupResponse" type="tns:updateGroupResponse"/>
<xs:complexType name="removeUserFromGroup">
<xs:sequence>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeUserFromGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="Response">
<xs:sequence>
<xs:element minOccurs="0" name="errorCode" type="tns:ResponseErrorCode"/>
<xs:element minOccurs="0" name="responseValue" type="xs:anyType"/>
<xs:element minOccurs="0" name="errorText" type="xs:string"/>
</xs:sequence>
<xs:attribute name="status" type="tns:ResponseStatus" use="required"/>
</xs:complexType>
<xs:complexType name="removeAllAttributes">
<xs:sequence>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeAllAttributesResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="attribute" type="ns1:GroupAttribute"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addAttributeResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllAttributes">
<xs:sequence>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllAttributesResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupAttrMapResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="GroupAttrMapResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element name="groupAttrMap">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="entry">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="key" type="xs:string"/>
<xs:element minOccurs="0" name="value" type="ns1:GroupAttribute"/>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="updateAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="attribute" type="ns1:GroupAttribute"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateAttributeResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getParentGroup">
<xs:sequence>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
<xs:element name="dependants" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getParentGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="GroupResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element minOccurs="0" name="group" type="ns1:Group"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="BaseObject">
<xs:sequence>
<xs:element minOccurs="0" name="objectState" type="xs:string"/>
<xs:element minOccurs="0" name="selected" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getGroupWithDependants">
<xs:sequence>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getGroupWithDependantsResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeGroup">
<xs:sequence>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserInGroups">
<xs:sequence>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserInGroupsResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="GroupListResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="groupList" nillable="true" type="ns1:Group"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="getChildGroups">
<xs:sequence>
<xs:element minOccurs="0" name="parentGroupId" type="xs:string"/>
<xs:element name="subgroups" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getChildGroupsResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="isUserInGroup">
<xs:sequence>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="isUserInGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="search">
<xs:sequence>
<xs:element minOccurs="0" name="search" type="ns1:groupsearch"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="attribute" type="ns1:GroupAttribute"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeAttributeResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUsersByGroup">
<xs:sequence>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUsersByGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:UserListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="UserListResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="userList" nillable="true" type="ns2:user"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="Login">
<xs:sequence>
<xs:element minOccurs="0" name="id" type="tns:LoginId"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
<xs:element minOccurs="0" name="password" type="xs:string"/>
<xs:element minOccurs="0" name="pwdEquivalentToken" type="xs:string"/>
<xs:element minOccurs="0" name="pwdChanged" type="xs:dateTime"/>
<xs:element minOccurs="0" name="pwdExp" type="xs:dateTime"/>
<xs:element name="firstTimeLogin" type="xs:int"/>
<xs:element name="resetPassword" type="xs:int"/>
<xs:element name="isLocked" type="xs:int"/>
<xs:element minOccurs="0" name="status" type="xs:string"/>
<xs:element minOccurs="0" name="gracePeriod" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createdBy" type="xs:string"/>
<xs:element minOccurs="0" name="currentLoginHost" type="xs:string"/>
<xs:element minOccurs="0" name="authFailCount" type="xs:int"/>
<xs:element minOccurs="0" name="lastAuthAttempt" type="xs:dateTime"/>
<xs:element minOccurs="0" name="canonicalName" type="xs:string"/>
<xs:element minOccurs="0" name="lastLogin" type="xs:dateTime"/>
<xs:element minOccurs="0" name="isDefault" type="xs:int"/>
<xs:element name="selected" type="xs:boolean"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="loginAttributes" nillable="true" type="tns:LoginAttribute"/>
<xs:element minOccurs="0" name="passwordChangeCount" type="xs:int"/>
<xs:element minOccurs="0" name="operation" type="tns:AttributeOperationEnum"/>
<xs:element minOccurs="0" name="origPrincipalName" type="xs:string"/>
<xs:element minOccurs="0" name="managedSysName" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="LoginId">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="login" type="xs:string"/>
<xs:element minOccurs="0" name="managedSysId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="LoginAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="loginAttrId" type="xs:string"/>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="login" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:element minOccurs="0" name="metadataId" type="xs:string"/>
<xs:element minOccurs="0" name="attrGroup" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="Subject">
<xs:sequence>
<xs:element name="readOnly" type="xs:boolean"/>
<xs:element name="expirationTime" type="xs:long"/>
<xs:element name="resultCode" type="xs:int"/>
<xs:element minOccurs="0" name="saml" type="xs:string"/>
<xs:element minOccurs="0" name="samlType" type="xs:string"/>
<xs:element name="daysToPwdExp" type="xs:int"/>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="ssoToken" type="tns:SSOToken"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="groups" nillable="true" type="xs:anyType"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="roles" nillable="true" type="xs:anyType"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
<xs:element minOccurs="0" name="principal" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="principals" nillable="true" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="SSOToken">
<xs:sequence>
<xs:element minOccurs="0" name="tokenType" type="xs:string"/>
<xs:element minOccurs="0" name="token" type="xs:string"/>
<xs:element minOccurs="0" name="authLevel" type="xs:string"/>
<xs:element minOccurs="0" name="provider" type="xs:string"/>
<xs:element minOccurs="0" name="clientIP" type="xs:string"/>
<xs:element minOccurs="0" name="principal" type="xs:string"/>
<xs:element name="maxIdleTime" type="xs:int"/>
<xs:element minOccurs="0" name="expirationTime" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserInGroupsAsFlatList">
<xs:sequence>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserInGroupsAsFlatListResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllGroups">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllGroupsResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="saveAttributes">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="groupAttr" type="ns1:GroupAttribute"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="saveAttributesResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getGroupsNotLinkedToUser">
<xs:sequence>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
<xs:element minOccurs="0" name="parentGroupId" type="xs:string"/>
<xs:element name="nested" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getGroupsNotLinkedToUserResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="attrId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAttributeResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupAttributeResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="GroupAttributeResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element minOccurs="0" name="groupAttr" type="ns1:GroupAttribute"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="addGroup">
<xs:sequence>
<xs:element minOccurs="0" name="group" type="ns1:Group"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getGroup">
<xs:sequence>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeChildGroups">
<xs:sequence>
<xs:element minOccurs="0" name="parentGroupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeChildGroupsResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllGroupsWithDependents">
<xs:sequence>
<xs:element name="subgroups" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllGroupsWithDependentsResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateGroup">
<xs:sequence>
<xs:element minOccurs="0" name="group" type="ns1:Group"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addUserToGroup">
<xs:sequence>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addUserToGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="ResponseStatus">
<xs:restriction base="xs:string">
<xs:enumeration value="success"/>
<xs:enumeration value="failure"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="ResponseErrorCode">
<xs:restriction base="xs:string">
<xs:enumeration value="objectNotFound"/>
<xs:enumeration value="classNotFound"/>
<xs:enumeration value="principalNotFound"/>
<xs:enumeration value="userNotFound"/>
<xs:enumeration value="userStatus"/>
<xs:enumeration value="supervisorlNotFound"/>
<xs:enumeration value="DUPLICATE_PRINCIPAL"/>
<xs:enumeration value="failPasswordPolicy"/>
<xs:enumeration value="groupIdNull"/>
<xs:enumeration value="groupIdInvalid"/>
<xs:enumeration value="roleIdNull"/>
<xs:enumeration value="roleIdInvalid"/>
<xs:enumeration value="success"/>
<xs:enumeration value="FAIL_SQL_ERORR"/>
<xs:enumeration value="FAIL_CONNECTION"/>
<xs:enumeration value="FAIL_ALPHA_CHAR_RULE"/>
<xs:enumeration value="FAIL_LOWER_CASE_RULE"/>
<xs:enumeration value="FAIL_UPPER_CASE_RULE"/>
<xs:enumeration value="FAIL_NON_APHANUMERIC_RULE"/>
<xs:enumeration value="FAIL_NUMERIC_CHAR_RULE"/>
<xs:enumeration value="FAIL_HISTORY_RULE"/>
<xs:enumeration value="FAIL_LENGTH_RULE"/>
<xs:enumeration value="FAIL_NEQ_NAME"/>
<xs:enumeration value="FAIL_NEQ_PASSWORD"/>
<xs:enumeration value="FAIL_NEQ_PRINCIPAL"/>
<xs:enumeration value="FAIL_PASSWORD_CHANGE_FREQUENCY"/>
<xs:enumeration value="PASSWORD_POLICY_NOT_FOUND"/>
<xs:enumeration value="FAIL_PASSWORD_CHANGE_ALLOW"/>
<xs:enumeration value="FAIL_REJECT_CHARS_IN_PSWD"/>
<xs:enumeration value="FAIL_ENCRYPTION"/>
<xs:enumeration value="FAIL_DECRYPTION"/>
<xs:enumeration value="FAIL_OTHER"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="AttributeOperationEnum">
<xs:restriction base="xs:string">
<xs:enumeration value="nochange"/>
<xs:enumeration value="add"/>
<xs:enumeration value="replace"/>
<xs:enumeration value="delete"/>
</xs:restriction>
</xs:simpleType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:idm.openiam.org/srvc/role/dto" xmlns:ns2="urn:idm.openiam.org/srvc/grp/service" xmlns:tns="urn:idm.openiam.org/srvc/grp/dto" elementFormDefault="qualified" targetNamespace="urn:idm.openiam.org/srvc/grp/dto" version="1.0">
<xs:import namespace="urn:idm.openiam.org/srvc/role/dto"/>
<xs:import namespace="urn:idm.openiam.org/srvc/grp/service"/>
<xs:element name="Group" type="tns:Group"/>
<xs:complexType name="GroupAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="id" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:element minOccurs="0" name="metadataElementId" type="xs:string"/>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="Group">
<xs:sequence>
<xs:element minOccurs="0" name="roles" type="ns1:roleSet"/>
<xs:element minOccurs="0" name="attributes" type="tns:groupAttributeMap"/>
<xs:element minOccurs="0" name="companyId" type="xs:string"/>
<xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createdBy" type="xs:string"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="groupClass" type="xs:string"/>
<xs:element minOccurs="0" name="grpId" type="xs:string"/>
<xs:element minOccurs="0" name="grpName" type="xs:string"/>
<xs:element minOccurs="0" name="inheritFromParent" type="xs:boolean"/>
<xs:element minOccurs="0" name="lastUpdate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="lastUpdatedBy" type="xs:string"/>
<xs:element minOccurs="0" name="parentGrpId" type="xs:string"/>
<xs:element minOccurs="0" name="provisionMethod" type="xs:string"/>
<xs:element minOccurs="0" name="provisionObjName" type="xs:string"/>
<xs:element minOccurs="0" name="status" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="subGroup" nillable="true" type="tns:Group"/>
<xs:element minOccurs="0" name="metadataTypeId" type="xs:string"/>
<xs:element minOccurs="0" name="selected" type="xs:boolean"/>
<xs:element minOccurs="0" name="ownerId" type="xs:string"/>
<xs:element minOccurs="0" name="internalGroupId" type="xs:string"/>
<xs:element minOccurs="0" name="operation" type="ns2:AttributeOperationEnum"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="groupSet">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="groupObj" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="group" type="tns:Group"/>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="groupAttributeMap">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="groupAttributeEntry" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="groupAttribute" type="tns:GroupAttribute"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="groupsearch">
<xs:sequence>
<xs:element minOccurs="0" name="grpId" type="xs:string"/>
<xs:element minOccurs="0" name="grpName" type="xs:string"/>
<xs:element minOccurs="0" name="status" type="xs:string"/>
<xs:element minOccurs="0" name="ownerId" type="xs:string"/>
<xs:element minOccurs="0" name="internalGroupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:idm.openiam.org/srvc/grp/service" elementFormDefault="qualified" targetNamespace="urn:idm.openiam.org/srvc/continfo/dto" version="1.0">
<xs:import namespace="urn:idm.openiam.org/srvc/grp/service"/>
<xs:complexType name="address">
<xs:sequence>
<xs:element minOccurs="0" name="isActive" type="xs:boolean"/>
<xs:element minOccurs="0" name="bldgNumber" type="xs:string"/>
<xs:element minOccurs="0" name="streetDirection" type="xs:string"/>
<xs:element minOccurs="0" name="suite" type="xs:string"/>
<xs:element minOccurs="0" name="address1" type="xs:string"/>
<xs:element minOccurs="0" name="address2" type="xs:string"/>
<xs:element minOccurs="0" name="address3" type="xs:string"/>
<xs:element minOccurs="0" name="address4" type="xs:string"/>
<xs:element minOccurs="0" name="address5" type="xs:string"/>
<xs:element minOccurs="0" name="address6" type="xs:string"/>
<xs:element minOccurs="0" name="address7" type="xs:string"/>
<xs:element minOccurs="0" name="addressId" type="xs:string"/>
<xs:element minOccurs="0" name="city" type="xs:string"/>
<xs:element minOccurs="0" name="country" type="xs:string"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="isDefault" type="xs:int"/>
<xs:element minOccurs="0" name="parentId" type="xs:string"/>
<xs:element minOccurs="0" name="parentType" type="xs:string"/>
<xs:element minOccurs="0" name="postalCd" type="xs:string"/>
<xs:element minOccurs="0" name="state" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="operation" type="ns1:AttributeOperationEnum"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="emailAddress">
<xs:sequence>
<xs:element minOccurs="0" name="isActive" type="xs:boolean"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="emailAddress" type="xs:string"/>
<xs:element minOccurs="0" name="emailId" type="xs:string"/>
<xs:element minOccurs="0" name="isDefault" type="xs:int"/>
<xs:element minOccurs="0" name="parentId" type="xs:string"/>
<xs:element minOccurs="0" name="parentType" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="operation" type="ns1:AttributeOperationEnum"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="phone">
<xs:sequence>
<xs:element minOccurs="0" name="isActive" type="xs:boolean"/>
<xs:element minOccurs="0" name="areaCd" type="xs:string"/>
<xs:element minOccurs="0" name="countryCd" type="xs:string"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="isDefault" type="xs:int"/>
<xs:element minOccurs="0" name="parentId" type="xs:string"/>
<xs:element minOccurs="0" name="parentType" type="xs:string"/>
<xs:element minOccurs="0" name="phoneExt" type="xs:string"/>
<xs:element minOccurs="0" name="phoneId" type="xs:string"/>
<xs:element minOccurs="0" name="phoneNbr" type="xs:string"/>
<xs:element minOccurs="0" name="phoneType" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="operation" type="ns1:AttributeOperationEnum"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addressMap">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="addressEntry" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element xmlns:ns2="urn:idm.openiam.org/srvc/continfo/dto" minOccurs="0" name="address" type="ns2:address"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="phoneMap">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="phoneEntry" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element xmlns:ns3="urn:idm.openiam.org/srvc/continfo/dto" minOccurs="0" name="phone" type="ns3:phone"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="emailAddressMap">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="emailAddressEntry" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element xmlns:ns4="urn:idm.openiam.org/srvc/continfo/dto" minOccurs="0" name="emailAddress" type="ns4:emailAddress"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getGroupWithDependants">
    <wsdl:part name="parameters" element="tns:getGroupWithDependants">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getChildGroups">
    <wsdl:part name="parameters" element="tns:getChildGroups">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeUserFromGroupResponse">
    <wsdl:part name="parameters" element="tns:removeUserFromGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAttributeResponse">
    <wsdl:part name="parameters" element="tns:removeAttributeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserInGroupsAsFlatListResponse">
    <wsdl:part name="parameters" element="tns:getUserInGroupsAsFlatListResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersByGroup">
    <wsdl:part name="parameters" element="tns:getUsersByGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addAttributeResponse">
    <wsdl:part name="parameters" element="tns:addAttributeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateGroup">
    <wsdl:part name="parameters" element="tns:updateGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllGroupsResponse">
    <wsdl:part name="parameters" element="tns:getAllGroupsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserToGroupResponse">
    <wsdl:part name="parameters" element="tns:addUserToGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeUserFromGroup">
    <wsdl:part name="parameters" element="tns:removeUserFromGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getParentGroup">
    <wsdl:part name="parameters" element="tns:getParentGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getParentGroupResponse">
    <wsdl:part name="parameters" element="tns:getParentGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupsNotLinkedToUserResponse">
    <wsdl:part name="parameters" element="tns:getGroupsNotLinkedToUserResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttributeResponse">
    <wsdl:part name="parameters" element="tns:getAttributeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllGroupsWithDependentsResponse">
    <wsdl:part name="parameters" element="tns:getAllGroupsWithDependentsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchResponse">
    <wsdl:part name="parameters" element="tns:searchResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAttribute">
    <wsdl:part name="parameters" element="tns:removeAttribute">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeChildGroups">
    <wsdl:part name="parameters" element="tns:removeChildGroups">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="saveAttributesResponse">
    <wsdl:part name="parameters" element="tns:saveAttributesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateGroupResponse">
    <wsdl:part name="parameters" element="tns:updateGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addAttribute">
    <wsdl:part name="parameters" element="tns:addAttribute">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAttribute">
    <wsdl:part name="parameters" element="tns:updateAttribute">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addGroupResponse">
    <wsdl:part name="parameters" element="tns:addGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupResponse">
    <wsdl:part name="parameters" element="tns:getGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttribute">
    <wsdl:part name="parameters" element="tns:getAttribute">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addGroup">
    <wsdl:part name="parameters" element="tns:addGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAllAttributesResponse">
    <wsdl:part name="parameters" element="tns:removeAllAttributesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getChildGroupsResponse">
    <wsdl:part name="parameters" element="tns:getChildGroupsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroup">
    <wsdl:part name="parameters" element="tns:getGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAllAttributes">
    <wsdl:part name="parameters" element="tns:removeAllAttributes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserToGroup">
    <wsdl:part name="parameters" element="tns:addUserToGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllAttributesResponse">
    <wsdl:part name="parameters" element="tns:getAllAttributesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeChildGroupsResponse">
    <wsdl:part name="parameters" element="tns:removeChildGroupsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllAttributes">
    <wsdl:part name="parameters" element="tns:getAllAttributes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="search">
    <wsdl:part name="parameters" element="tns:search">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAttributeResponse">
    <wsdl:part name="parameters" element="tns:updateAttributeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllGroupsWithDependents">
    <wsdl:part name="parameters" element="tns:getAllGroupsWithDependents">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeGroup">
    <wsdl:part name="parameters" element="tns:removeGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserInGroupsResponse">
    <wsdl:part name="parameters" element="tns:getUserInGroupsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserInGroups">
    <wsdl:part name="parameters" element="tns:getUserInGroups">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupsNotLinkedToUser">
    <wsdl:part name="parameters" element="tns:getGroupsNotLinkedToUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserInGroup">
    <wsdl:part name="parameters" element="tns:isUserInGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersByGroupResponse">
    <wsdl:part name="parameters" element="tns:getUsersByGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupWithDependantsResponse">
    <wsdl:part name="parameters" element="tns:getGroupWithDependantsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserInGroupResponse">
    <wsdl:part name="parameters" element="tns:isUserInGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllGroups">
    <wsdl:part name="parameters" element="tns:getAllGroups">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeGroupResponse">
    <wsdl:part name="parameters" element="tns:removeGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserInGroupsAsFlatList">
    <wsdl:part name="parameters" element="tns:getUserInGroupsAsFlatList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="saveAttributes">
    <wsdl:part name="parameters" element="tns:saveAttributes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="GroupDataWebService">
    <wsdl:operation name="removeUserFromGroup">
      <wsdl:input name="removeUserFromGroup" message="tns:removeUserFromGroup">
    </wsdl:input>
      <wsdl:output name="removeUserFromGroupResponse" message="tns:removeUserFromGroupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllAttributes">
      <wsdl:input name="removeAllAttributes" message="tns:removeAllAttributes">
    </wsdl:input>
      <wsdl:output name="removeAllAttributesResponse" message="tns:removeAllAttributesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addAttribute">
      <wsdl:input name="addAttribute" message="tns:addAttribute">
    </wsdl:input>
      <wsdl:output name="addAttributeResponse" message="tns:addAttributeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllAttributes">
      <wsdl:input name="getAllAttributes" message="tns:getAllAttributes">
    </wsdl:input>
      <wsdl:output name="getAllAttributesResponse" message="tns:getAllAttributesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAttribute">
      <wsdl:input name="updateAttribute" message="tns:updateAttribute">
    </wsdl:input>
      <wsdl:output name="updateAttributeResponse" message="tns:updateAttributeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getParentGroup">
      <wsdl:input name="getParentGroup" message="tns:getParentGroup">
    </wsdl:input>
      <wsdl:output name="getParentGroupResponse" message="tns:getParentGroupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupWithDependants">
      <wsdl:input name="getGroupWithDependants" message="tns:getGroupWithDependants">
    </wsdl:input>
      <wsdl:output name="getGroupWithDependantsResponse" message="tns:getGroupWithDependantsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeGroup">
      <wsdl:input name="removeGroup" message="tns:removeGroup">
    </wsdl:input>
      <wsdl:output name="removeGroupResponse" message="tns:removeGroupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserInGroups">
      <wsdl:input name="getUserInGroups" message="tns:getUserInGroups">
    </wsdl:input>
      <wsdl:output name="getUserInGroupsResponse" message="tns:getUserInGroupsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getChildGroups">
      <wsdl:input name="getChildGroups" message="tns:getChildGroups">
    </wsdl:input>
      <wsdl:output name="getChildGroupsResponse" message="tns:getChildGroupsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isUserInGroup">
      <wsdl:input name="isUserInGroup" message="tns:isUserInGroup">
    </wsdl:input>
      <wsdl:output name="isUserInGroupResponse" message="tns:isUserInGroupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="search">
      <wsdl:input name="search" message="tns:search">
    </wsdl:input>
      <wsdl:output name="searchResponse" message="tns:searchResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAttribute">
      <wsdl:input name="removeAttribute" message="tns:removeAttribute">
    </wsdl:input>
      <wsdl:output name="removeAttributeResponse" message="tns:removeAttributeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUsersByGroup">
      <wsdl:input name="getUsersByGroup" message="tns:getUsersByGroup">
    </wsdl:input>
      <wsdl:output name="getUsersByGroupResponse" message="tns:getUsersByGroupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserInGroupsAsFlatList">
      <wsdl:input name="getUserInGroupsAsFlatList" message="tns:getUserInGroupsAsFlatList">
    </wsdl:input>
      <wsdl:output name="getUserInGroupsAsFlatListResponse" message="tns:getUserInGroupsAsFlatListResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllGroups">
      <wsdl:input name="getAllGroups" message="tns:getAllGroups">
    </wsdl:input>
      <wsdl:output name="getAllGroupsResponse" message="tns:getAllGroupsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="saveAttributes">
      <wsdl:input name="saveAttributes" message="tns:saveAttributes">
    </wsdl:input>
      <wsdl:output name="saveAttributesResponse" message="tns:saveAttributesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupsNotLinkedToUser">
      <wsdl:input name="getGroupsNotLinkedToUser" message="tns:getGroupsNotLinkedToUser">
    </wsdl:input>
      <wsdl:output name="getGroupsNotLinkedToUserResponse" message="tns:getGroupsNotLinkedToUserResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAttribute">
      <wsdl:input name="getAttribute" message="tns:getAttribute">
    </wsdl:input>
      <wsdl:output name="getAttributeResponse" message="tns:getAttributeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addGroup">
      <wsdl:input name="addGroup" message="tns:addGroup">
    </wsdl:input>
      <wsdl:output name="addGroupResponse" message="tns:addGroupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroup">
      <wsdl:input name="getGroup" message="tns:getGroup">
    </wsdl:input>
      <wsdl:output name="getGroupResponse" message="tns:getGroupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeChildGroups">
      <wsdl:input name="removeChildGroups" message="tns:removeChildGroups">
    </wsdl:input>
      <wsdl:output name="removeChildGroupsResponse" message="tns:removeChildGroupsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllGroupsWithDependents">
      <wsdl:input name="getAllGroupsWithDependents" message="tns:getAllGroupsWithDependents">
    </wsdl:input>
      <wsdl:output name="getAllGroupsWithDependentsResponse" message="tns:getAllGroupsWithDependentsResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateGroup">
      <wsdl:input name="updateGroup" message="tns:updateGroup">
    </wsdl:input>
      <wsdl:output name="updateGroupResponse" message="tns:updateGroupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserToGroup">
      <wsdl:input name="addUserToGroup" message="tns:addUserToGroup">
    </wsdl:input>
      <wsdl:output name="addUserToGroupResponse" message="tns:addUserToGroupResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="GroupDataWebServiceServiceSoapBinding" type="tns:GroupDataWebService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="removeUserFromGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeUserFromGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeUserFromGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllAttributes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeAllAttributes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeAllAttributesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllAttributes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllAttributes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllAttributesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getParentGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getParentGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getParentGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupWithDependants">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGroupWithDependants">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGroupWithDependantsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserInGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserInGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserInGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getChildGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getChildGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getChildGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isUserInGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isUserInGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isUserInGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="search">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="search">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUsersByGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUsersByGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUsersByGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserInGroupsAsFlatList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserInGroupsAsFlatList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserInGroupsAsFlatListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupsNotLinkedToUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGroupsNotLinkedToUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGroupsNotLinkedToUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="saveAttributes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="saveAttributes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="saveAttributesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeChildGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeChildGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeChildGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllGroupsWithDependents">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllGroupsWithDependents">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllGroupsWithDependentsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserToGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addUserToGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addUserToGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="GroupDataWebServiceService">
    <wsdl:port name="GroupDataWebServicePort" binding="tns:GroupDataWebServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/GroupDataWebServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
