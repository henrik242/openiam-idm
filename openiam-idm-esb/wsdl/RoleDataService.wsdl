<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="RoleDataWebServiceService" targetNamespace="urn:idm.openiam.org/srvc/role/service" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:idm.openiam.org/srvc/role/service" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:idm.openiam.org/srvc/continfo/dto" xmlns:ns2="urn:idm.openiam.org/srvc/role/service" xmlns:tns="urn:idm.openiam.org/srvc/user/dto" elementFormDefault="qualified" targetNamespace="urn:idm.openiam.org/srvc/user/dto" version="1.0">
<xs:import namespace="urn:idm.openiam.org/srvc/continfo/dto"/>
<xs:import namespace="urn:idm.openiam.org/srvc/role/service"/>
<xs:complexType name="user">
<xs:complexContent>
<xs:extension base="ns2:BaseObject">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="addresses" nillable="true" type="ns1:address"/>
<xs:element minOccurs="0" name="birthdate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="companyId" type="xs:string"/>
<xs:element minOccurs="0" name="companyOwnerId" type="xs:string"/>
<xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createdBy" type="xs:string"/>
<xs:element minOccurs="0" name="deptCd" type="xs:string"/>
<xs:element minOccurs="0" name="deptName" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="emailAddresses" nillable="true" type="ns1:emailAddress"/>
<xs:element minOccurs="0" name="employeeId" type="xs:string"/>
<xs:element minOccurs="0" name="employeeType" type="xs:string"/>
<xs:element minOccurs="0" name="firstName" type="xs:string"/>
<xs:element minOccurs="0" name="jobCode" type="xs:string"/>
<xs:element minOccurs="0" name="lastName" type="xs:string"/>
<xs:element minOccurs="0" name="lastUpdate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="lastUpdatedBy" type="xs:string"/>
<xs:element minOccurs="0" name="locationCd" type="xs:string"/>
<xs:element minOccurs="0" name="locationName" type="xs:string"/>
<xs:element minOccurs="0" name="managerId" type="xs:string"/>
<xs:element minOccurs="0" name="metadataTypeId" type="xs:string"/>
<xs:element minOccurs="0" name="classification" type="xs:string"/>
<xs:element minOccurs="0" name="middleInit" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="phones" nillable="true" type="ns1:phone"/>
<xs:element minOccurs="0" name="prefix" type="xs:string"/>
<xs:element minOccurs="0" name="sex" type="xs:string"/>
<xs:element minOccurs="0" name="status" type="tns:UserStatus"/>
<xs:element minOccurs="0" name="secondaryStatus" type="tns:UserStatus"/>
<xs:element minOccurs="0" name="suffix" type="xs:string"/>
<xs:element minOccurs="0" name="title" type="xs:string"/>
<xs:element minOccurs="0" name="userAttributes" type="tns:userAttributeMap"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
<xs:element minOccurs="0" name="userTypeInd" type="xs:string"/>
<xs:element minOccurs="0" name="userNotes" type="tns:userNoteSet"/>
<xs:element minOccurs="0" name="division" type="xs:string"/>
<xs:element minOccurs="0" name="costCenter" type="xs:string"/>
<xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="lastDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="mailCode" type="xs:string"/>
<xs:element minOccurs="0" name="nickname" type="xs:string"/>
<xs:element minOccurs="0" name="maidenName" type="xs:string"/>
<xs:element minOccurs="0" name="passwordTheme" type="xs:string"/>
<xs:element minOccurs="0" name="country" type="xs:string"/>
<xs:element minOccurs="0" name="bldgNum" type="xs:string"/>
<xs:element minOccurs="0" name="streetDirection" type="xs:string"/>
<xs:element minOccurs="0" name="suite" type="xs:string"/>
<xs:element minOccurs="0" name="address1" type="xs:string"/>
<xs:element minOccurs="0" name="address2" type="xs:string"/>
<xs:element minOccurs="0" name="address3" type="xs:string"/>
<xs:element minOccurs="0" name="address4" type="xs:string"/>
<xs:element minOccurs="0" name="address5" type="xs:string"/>
<xs:element minOccurs="0" name="address6" type="xs:string"/>
<xs:element minOccurs="0" name="address7" type="xs:string"/>
<xs:element minOccurs="0" name="city" type="xs:string"/>
<xs:element minOccurs="0" name="state" type="xs:string"/>
<xs:element minOccurs="0" name="postalCd" type="xs:string"/>
<xs:element minOccurs="0" name="email" type="xs:string"/>
<xs:element minOccurs="0" name="showInSearch" type="xs:int"/>
<xs:element minOccurs="0" name="delAdmin" type="xs:int"/>
<xs:element minOccurs="0" name="areaCd" type="xs:string"/>
<xs:element minOccurs="0" name="countryCd" type="xs:string"/>
<xs:element minOccurs="0" name="phoneNbr" type="xs:string"/>
<xs:element minOccurs="0" name="phoneExt" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="principalList" nillable="true" type="ns2:Login"/>
<xs:element minOccurs="0" name="supervisor" type="tns:supervisor"/>
<xs:element minOccurs="0" name="alternateContactId" type="xs:string"/>
<xs:element minOccurs="0" name="securityDomain" type="xs:string"/>
<xs:element minOccurs="0" name="userOwnerId" type="xs:string"/>
<xs:element minOccurs="0" name="datePasswordChanged" type="xs:dateTime"/>
<xs:element minOccurs="0" name="dateChallengeRespChanged" type="xs:dateTime"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="userAttributeMap">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="userAttributeEntry" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="userAttribute" type="tns:userAttribute"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="userAttribute">
<xs:complexContent>
<xs:extension base="ns2:BaseObject">
<xs:sequence>
<xs:element minOccurs="0" name="id" type="xs:string"/>
<xs:element minOccurs="0" name="metadataElementId" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:element minOccurs="0" name="attrGroup" type="xs:string"/>
<xs:element minOccurs="0" name="operation" type="ns2:AttributeOperationEnum"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="userNoteSet">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="userNoteItem" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="userNote" type="tns:userNote"/>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="userNote">
<xs:sequence>
<xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createdBy" type="xs:string"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="noteType" type="xs:string"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
<xs:element minOccurs="0" name="userNoteId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="supervisor">
<xs:sequence>
<xs:element minOccurs="0" name="comments" type="xs:string"/>
<xs:element minOccurs="0" name="employee" type="tns:user"/>
<xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="isPrimarySuper" type="xs:int"/>
<xs:element minOccurs="0" name="orgStructureId" type="xs:string"/>
<xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="status" type="xs:string"/>
<xs:element minOccurs="0" name="supervisor" type="tns:user"/>
<xs:element minOccurs="0" name="supervisorType" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="UserStatus">
<xs:restriction base="xs:string">
<xs:enumeration value="active"/>
<xs:enumeration value="inactive"/>
<xs:enumeration value="pending_start_date"/>
<xs:enumeration value="pending_approval"/>
<xs:enumeration value="approval_declined"/>
<xs:enumeration value="pending_user_validation"/>
<xs:enumeration value="pending_initial_login"/>
<xs:enumeration value="terminate"/>
<xs:enumeration value="deleted"/>
<xs:enumeration value="locked"/>
<xs:enumeration value="locked_admin"/>
<xs:enumeration value="disabled"/>
<xs:enumeration value="retired"/>
<xs:enumeration value="leave"/>
</xs:restriction>
</xs:simpleType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:idm.openiam.org/srvc/role/dto" xmlns:ns2="urn:idm.openiam.org/srvc/user/dto" xmlns:ns3="urn:idm.openiam.org/srvc/grp/dto" xmlns:tns="urn:idm.openiam.org/srvc/role/service" elementFormDefault="unqualified" targetNamespace="urn:idm.openiam.org/srvc/role/service" version="1.0">
<xs:import namespace="urn:idm.openiam.org/srvc/role/dto"/>
<xs:import namespace="urn:idm.openiam.org/srvc/user/dto"/>
<xs:import namespace="urn:idm.openiam.org/srvc/grp/dto"/>
<xs:element name="addAttribute" type="tns:addAttribute"/>
<xs:element name="addAttributeResponse" type="tns:addAttributeResponse"/>
<xs:element name="addGroupToRole" type="tns:addGroupToRole"/>
<xs:element name="addGroupToRoleResponse" type="tns:addGroupToRoleResponse"/>
<xs:element name="addRole" type="tns:addRole"/>
<xs:element name="addRolePolicy" type="tns:addRolePolicy"/>
<xs:element name="addRolePolicyResponse" type="tns:addRolePolicyResponse"/>
<xs:element name="addRoleResponse" type="tns:addRoleResponse"/>
<xs:element name="addUserToRole" type="tns:addUserToRole"/>
<xs:element name="addUserToRoleResponse" type="tns:addUserToRoleResponse"/>
<xs:element name="assocUserToRole" type="tns:assocUserToRole"/>
<xs:element name="assocUserToRoleResponse" type="tns:assocUserToRoleResponse"/>
<xs:element name="getAllAttributes" type="tns:getAllAttributes"/>
<xs:element name="getAllAttributesResponse" type="tns:getAllAttributesResponse"/>
<xs:element name="getAllRolePolicies" type="tns:getAllRolePolicies"/>
<xs:element name="getAllRolePoliciesResponse" type="tns:getAllRolePoliciesResponse"/>
<xs:element name="getAllRoles" type="tns:getAllRoles"/>
<xs:element name="getAllRolesResponse" type="tns:getAllRolesResponse"/>
<xs:element name="getAttribute" type="tns:getAttribute"/>
<xs:element name="getAttributeResponse" type="tns:getAttributeResponse"/>
<xs:element name="getGroupsInRole" type="tns:getGroupsInRole"/>
<xs:element name="getGroupsInRoleResponse" type="tns:getGroupsInRoleResponse"/>
<xs:element name="getRole" type="tns:getRole"/>
<xs:element name="getRolePolicy" type="tns:getRolePolicy"/>
<xs:element name="getRolePolicyResponse" type="tns:getRolePolicyResponse"/>
<xs:element name="getRoleResponse" type="tns:getRoleResponse"/>
<xs:element name="getRolesInDomain" type="tns:getRolesInDomain"/>
<xs:element name="getRolesInDomainResponse" type="tns:getRolesInDomainResponse"/>
<xs:element name="getRolesInGroup" type="tns:getRolesInGroup"/>
<xs:element name="getRolesInGroupResponse" type="tns:getRolesInGroupResponse"/>
<xs:element name="getUserRoleById" type="tns:getUserRoleById"/>
<xs:element name="getUserRoleByIdResponse" type="tns:getUserRoleByIdResponse"/>
<xs:element name="getUserRoles" type="tns:getUserRoles"/>
<xs:element name="getUserRolesAsFlatList" type="tns:getUserRolesAsFlatList"/>
<xs:element name="getUserRolesAsFlatListResponse" type="tns:getUserRolesAsFlatListResponse"/>
<xs:element name="getUserRolesByDomain" type="tns:getUserRolesByDomain"/>
<xs:element name="getUserRolesByDomainResponse" type="tns:getUserRolesByDomainResponse"/>
<xs:element name="getUserRolesDirect" type="tns:getUserRolesDirect"/>
<xs:element name="getUserRolesDirectResponse" type="tns:getUserRolesDirectResponse"/>
<xs:element name="getUserRolesForUser" type="tns:getUserRolesForUser"/>
<xs:element name="getUserRolesForUserResponse" type="tns:getUserRolesForUserResponse"/>
<xs:element name="getUserRolesResponse" type="tns:getUserRolesResponse"/>
<xs:element name="getUsersInRole" type="tns:getUsersInRole"/>
<xs:element name="getUsersInRoleResponse" type="tns:getUsersInRoleResponse"/>
<xs:element name="isGroupInRole" type="tns:isGroupInRole"/>
<xs:element name="isGroupInRoleResponse" type="tns:isGroupInRoleResponse"/>
<xs:element name="isUserInRole" type="tns:isUserInRole"/>
<xs:element name="isUserInRoleResponse" type="tns:isUserInRoleResponse"/>
<xs:element name="removeAllAttributes" type="tns:removeAllAttributes"/>
<xs:element name="removeAllAttributesResponse" type="tns:removeAllAttributesResponse"/>
<xs:element name="removeAllGroupsFromRole" type="tns:removeAllGroupsFromRole"/>
<xs:element name="removeAllGroupsFromRoleResponse" type="tns:removeAllGroupsFromRoleResponse"/>
<xs:element name="removeAttribute" type="tns:removeAttribute"/>
<xs:element name="removeAttributeResponse" type="tns:removeAttributeResponse"/>
<xs:element name="removeGroupFromRole" type="tns:removeGroupFromRole"/>
<xs:element name="removeGroupFromRoleResponse" type="tns:removeGroupFromRoleResponse"/>
<xs:element name="removeRole" type="tns:removeRole"/>
<xs:element name="removeRolePolicy" type="tns:removeRolePolicy"/>
<xs:element name="removeRolePolicyResponse" type="tns:removeRolePolicyResponse"/>
<xs:element name="removeRoleResponse" type="tns:removeRoleResponse"/>
<xs:element name="removeUserFromRole" type="tns:removeUserFromRole"/>
<xs:element name="removeUserFromRoleResponse" type="tns:removeUserFromRoleResponse"/>
<xs:element name="search" type="tns:search"/>
<xs:element name="searchResponse" type="tns:searchResponse"/>
<xs:element name="updateAttribute" type="tns:updateAttribute"/>
<xs:element name="updateAttributeResponse" type="tns:updateAttributeResponse"/>
<xs:element name="updateRole" type="tns:updateRole"/>
<xs:element name="updateRolePolicy" type="tns:updateRolePolicy"/>
<xs:element name="updateRolePolicyResponse" type="tns:updateRolePolicyResponse"/>
<xs:element name="updateRoleResponse" type="tns:updateRoleResponse"/>
<xs:element name="updateUserRoleAssoc" type="tns:updateUserRoleAssoc"/>
<xs:element name="updateUserRoleAssocResponse" type="tns:updateUserRoleAssocResponse"/>
<xs:complexType name="getRolePolicy">
<xs:sequence>
<xs:element minOccurs="0" name="rolePolicyId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRolePolicyResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RolePolicyResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RolePolicyResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element minOccurs="0" name="rolePolicy" type="ns1:RolePolicy"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="Response">
<xs:sequence>
<xs:element minOccurs="0" name="errorCode" type="tns:ResponseErrorCode"/>
<xs:element minOccurs="0" name="responseValue" type="xs:anyType"/>
<xs:element minOccurs="0" name="errorText" type="xs:string"/>
</xs:sequence>
<xs:attribute name="status" type="tns:ResponseStatus" use="required"/>
</xs:complexType>
<xs:complexType name="BaseObject">
<xs:sequence>
<xs:element minOccurs="0" name="objectState" type="xs:string"/>
<xs:element minOccurs="0" name="selected" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllAttributes">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllAttributesResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleAttrArrayResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RoleAttrArrayResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="roleAttrAry" nillable="true" type="ns1:roleAttribute"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="getUserRolesAsFlatList">
<xs:sequence>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserRolesAsFlatListResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RoleListResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="roleList" nillable="true" type="ns1:role"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="getRolesInDomain">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRolesInDomainResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeGroupFromRole">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeGroupFromRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserRolesForUser">
<xs:sequence>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserRolesForUserResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:UserRoleListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="UserRoleListResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="userRoleList" nillable="true" type="ns1:userrole"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="getUserRolesByDomain">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserRolesByDomainResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeAllGroupsFromRole">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeAllGroupsFromRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateRolePolicy">
<xs:sequence>
<xs:element minOccurs="0" name="rolePolicy" type="ns1:RolePolicy"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateRolePolicyResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RolePolicyResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="attribute" type="ns1:roleAttribute"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateAttributeResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="isUserInRole">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="isUserInRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUsersInRole">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUsersInRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:UserArrayResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="UserArrayResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="userAry" nillable="true" type="ns2:user"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="Login">
<xs:sequence>
<xs:element minOccurs="0" name="id" type="tns:LoginId"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
<xs:element minOccurs="0" name="password" type="xs:string"/>
<xs:element minOccurs="0" name="pwdEquivalentToken" type="xs:string"/>
<xs:element minOccurs="0" name="pwdChanged" type="xs:dateTime"/>
<xs:element minOccurs="0" name="pwdExp" type="xs:dateTime"/>
<xs:element name="firstTimeLogin" type="xs:int"/>
<xs:element name="resetPassword" type="xs:int"/>
<xs:element name="isLocked" type="xs:int"/>
<xs:element minOccurs="0" name="status" type="xs:string"/>
<xs:element minOccurs="0" name="gracePeriod" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createdBy" type="xs:string"/>
<xs:element minOccurs="0" name="currentLoginHost" type="xs:string"/>
<xs:element minOccurs="0" name="authFailCount" type="xs:int"/>
<xs:element minOccurs="0" name="lastAuthAttempt" type="xs:dateTime"/>
<xs:element minOccurs="0" name="canonicalName" type="xs:string"/>
<xs:element minOccurs="0" name="lastLogin" type="xs:dateTime"/>
<xs:element minOccurs="0" name="isDefault" type="xs:int"/>
<xs:element name="selected" type="xs:boolean"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="loginAttributes" nillable="true" type="tns:LoginAttribute"/>
<xs:element minOccurs="0" name="passwordChangeCount" type="xs:int"/>
<xs:element minOccurs="0" name="operation" type="tns:AttributeOperationEnum"/>
<xs:element minOccurs="0" name="origPrincipalName" type="xs:string"/>
<xs:element minOccurs="0" name="managedSysName" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="LoginId">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="login" type="xs:string"/>
<xs:element minOccurs="0" name="managedSysId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="LoginAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="loginAttrId" type="xs:string"/>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="login" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:element minOccurs="0" name="metadataId" type="xs:string"/>
<xs:element minOccurs="0" name="attrGroup" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="Subject">
<xs:sequence>
<xs:element name="readOnly" type="xs:boolean"/>
<xs:element name="expirationTime" type="xs:long"/>
<xs:element name="resultCode" type="xs:int"/>
<xs:element minOccurs="0" name="saml" type="xs:string"/>
<xs:element minOccurs="0" name="samlType" type="xs:string"/>
<xs:element name="daysToPwdExp" type="xs:int"/>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="ssoToken" type="tns:SSOToken"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="groups" nillable="true" type="xs:anyType"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="roles" nillable="true" type="xs:anyType"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
<xs:element minOccurs="0" name="principal" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="principals" nillable="true" type="xs:anyType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="SSOToken">
<xs:sequence>
<xs:element minOccurs="0" name="tokenType" type="xs:string"/>
<xs:element minOccurs="0" name="token" type="xs:string"/>
<xs:element minOccurs="0" name="authLevel" type="xs:string"/>
<xs:element minOccurs="0" name="provider" type="xs:string"/>
<xs:element minOccurs="0" name="clientIP" type="xs:string"/>
<xs:element minOccurs="0" name="principal" type="xs:string"/>
<xs:element name="maxIdleTime" type="xs:int"/>
<xs:element minOccurs="0" name="expirationTime" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createTime" type="xs:dateTime"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addRole">
<xs:sequence>
<xs:element minOccurs="0" name="role" type="ns1:role"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RoleResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element minOccurs="0" name="role" type="ns1:role"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="getAllRolePolicies">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllRolePoliciesResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RolePolicyListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RolePolicyListResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="rolePolicy" nillable="true" type="ns1:RolePolicy"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="removeRole">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserRoles">
<xs:sequence>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserRolesResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRole">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getGroupsInRole">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getGroupsInRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:GroupArrayResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="GroupArrayResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="groupAry" nillable="true" type="ns3:Group"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="removeUserFromRole">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeUserFromRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeAllAttributes">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeAllAttributesResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="assocUserToRole">
<xs:sequence>
<xs:element minOccurs="0" name="userRole" type="ns1:userrole"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="assocUserToRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="search">
<xs:sequence>
<xs:element minOccurs="0" name="search" type="ns1:rolesearch"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="searchResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserRoleById">
<xs:sequence>
<xs:element minOccurs="0" name="userRoleId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserRoleByIdResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:UserRoleResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="UserRoleResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element minOccurs="0" name="userRole" type="ns1:userrole"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="isGroupInRole">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="isGroupInRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateRole">
<xs:sequence>
<xs:element minOccurs="0" name="role" type="ns1:role"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserRolesDirect">
<xs:sequence>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserRolesDirectResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRolesInGroup">
<xs:sequence>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRolesInGroupResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateUserRoleAssoc">
<xs:sequence>
<xs:element minOccurs="0" name="userRole" type="ns1:userrole"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateUserRoleAssocResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="attribute" type="ns1:roleAttribute"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addAttributeResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleAttributeResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RoleAttributeResponse">
<xs:complexContent>
<xs:extension base="tns:Response">
<xs:sequence>
<xs:element minOccurs="0" name="roleAttr" type="ns1:roleAttribute"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="addGroupToRole">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addGroupToRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeRolePolicy">
<xs:sequence>
<xs:element minOccurs="0" name="rolePolicy" type="ns1:RolePolicy"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeRolePolicyResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="attrId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAttributeResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleAttributeResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addUserToRole">
<xs:sequence>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addUserToRoleResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addRolePolicy">
<xs:sequence>
<xs:element minOccurs="0" name="rPolicy" type="ns1:RolePolicy"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addRolePolicyResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RolePolicyResponse"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="attribute" type="ns1:roleAttribute"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeAttributeResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:Response"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllRoles">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllRolesResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:RoleListResponse"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="ResponseStatus">
<xs:restriction base="xs:string">
<xs:enumeration value="success"/>
<xs:enumeration value="failure"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="ResponseErrorCode">
<xs:restriction base="xs:string">
<xs:enumeration value="objectNotFound"/>
<xs:enumeration value="classNotFound"/>
<xs:enumeration value="principalNotFound"/>
<xs:enumeration value="userNotFound"/>
<xs:enumeration value="userStatus"/>
<xs:enumeration value="supervisorlNotFound"/>
<xs:enumeration value="DUPLICATE_PRINCIPAL"/>
<xs:enumeration value="failPasswordPolicy"/>
<xs:enumeration value="groupIdNull"/>
<xs:enumeration value="groupIdInvalid"/>
<xs:enumeration value="roleIdNull"/>
<xs:enumeration value="roleIdInvalid"/>
<xs:enumeration value="success"/>
<xs:enumeration value="FAIL_SQL_ERORR"/>
<xs:enumeration value="FAIL_CONNECTION"/>
<xs:enumeration value="FAIL_ALPHA_CHAR_RULE"/>
<xs:enumeration value="FAIL_LOWER_CASE_RULE"/>
<xs:enumeration value="FAIL_UPPER_CASE_RULE"/>
<xs:enumeration value="FAIL_NON_APHANUMERIC_RULE"/>
<xs:enumeration value="FAIL_NUMERIC_CHAR_RULE"/>
<xs:enumeration value="FAIL_HISTORY_RULE"/>
<xs:enumeration value="FAIL_LENGTH_RULE"/>
<xs:enumeration value="FAIL_NEQ_NAME"/>
<xs:enumeration value="FAIL_NEQ_PASSWORD"/>
<xs:enumeration value="FAIL_NEQ_PRINCIPAL"/>
<xs:enumeration value="FAIL_PASSWORD_CHANGE_FREQUENCY"/>
<xs:enumeration value="PASSWORD_POLICY_NOT_FOUND"/>
<xs:enumeration value="FAIL_PASSWORD_CHANGE_ALLOW"/>
<xs:enumeration value="FAIL_REJECT_CHARS_IN_PSWD"/>
<xs:enumeration value="FAIL_ENCRYPTION"/>
<xs:enumeration value="FAIL_DECRYPTION"/>
<xs:enumeration value="FAIL_OTHER"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="AttributeOperationEnum">
<xs:restriction base="xs:string">
<xs:enumeration value="nochange"/>
<xs:enumeration value="add"/>
<xs:enumeration value="replace"/>
<xs:enumeration value="delete"/>
</xs:restriction>
</xs:simpleType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:idm.openiam.org/srvc/role/service" xmlns:ns2="urn:idm.openiam.org/srvc/grp/dto" xmlns:tns="urn:idm.openiam.org/srvc/role/dto" elementFormDefault="qualified" targetNamespace="urn:idm.openiam.org/srvc/role/dto" version="1.0">
<xs:import namespace="urn:idm.openiam.org/srvc/role/service"/>
<xs:import namespace="urn:idm.openiam.org/srvc/grp/dto"/>
<xs:element name="Role" type="tns:role"/>
<xs:complexType name="RolePolicy">
<xs:complexContent>
<xs:extension base="ns1:BaseObject">
<xs:sequence>
<xs:element minOccurs="0" name="rolePolicyId" type="xs:string"/>
<xs:element minOccurs="0" name="serviceId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="value1" type="xs:string"/>
<xs:element minOccurs="0" name="value2" type="xs:string"/>
<xs:element minOccurs="0" name="action" type="xs:string"/>
<xs:element minOccurs="0" name="executionOrder" type="xs:int"/>
<xs:element minOccurs="0" name="policyScript" type="xs:string"/>
<xs:element minOccurs="0" name="actionQualifier" type="xs:string"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="roleAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="roleAttrId" type="xs:string"/>
<xs:element minOccurs="0" name="serviceId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="metadataElementId" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:element minOccurs="0" name="attrGroup" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="role">
<xs:complexContent>
<xs:extension base="ns1:BaseObject">
<xs:sequence>
<xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createdBy" type="xs:string"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="groups" type="ns2:groupSet"/>
<xs:element minOccurs="0" name="id" type="tns:roleId"/>
<xs:element minOccurs="0" name="provisionObjName" type="xs:string"/>
<xs:element minOccurs="0" name="parentRoleId" type="xs:string"/>
<xs:element minOccurs="0" name="roleAttributes" type="tns:roleAttributeSet"/>
<xs:element minOccurs="0" name="roleName" type="xs:string"/>
<xs:element name="userAssociationMethod" type="xs:int"/>
<xs:element minOccurs="0" name="metadataTypeId" type="xs:string"/>
<xs:element minOccurs="0" name="ownerId" type="xs:string"/>
<xs:element minOccurs="0" name="inheritFromParent" type="xs:int"/>
<xs:element minOccurs="0" name="status" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="childRoles" nillable="true" type="tns:role"/>
<xs:element minOccurs="0" name="selected" type="xs:boolean"/>
<xs:element minOccurs="0" name="internalRoleId" type="xs:string"/>
<xs:element minOccurs="0" name="operation" type="ns1:AttributeOperationEnum"/>
<xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="rolePolicy" nillable="true" type="tns:RolePolicy"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="roleSet">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="roleObj" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="role" type="tns:role"/>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="roleId">
<xs:sequence>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="serviceId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="roleAttributeSet">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="roleAttributeObj" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="roleAttribute" type="tns:roleAttribute"/>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="userrole">
<xs:sequence>
<xs:element minOccurs="0" name="userRoleId" type="xs:string"/>
<xs:element minOccurs="0" name="serviceId" type="xs:string"/>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="userId" type="xs:string"/>
<xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="startDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="endDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="status" type="xs:string"/>
<xs:element minOccurs="0" name="createdBy" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="rolesearch">
<xs:sequence>
<xs:element minOccurs="0" name="roleId" type="xs:string"/>
<xs:element minOccurs="0" name="domainId" type="xs:string"/>
<xs:element minOccurs="0" name="roleName" type="xs:string"/>
<xs:element minOccurs="0" name="ownerId" type="xs:string"/>
<xs:element minOccurs="0" name="typeId" type="xs:string"/>
<xs:element minOccurs="0" name="internalRoleId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:idm.openiam.org/srvc/role/dto" xmlns:ns2="urn:idm.openiam.org/srvc/role/service" xmlns:tns="urn:idm.openiam.org/srvc/grp/dto" elementFormDefault="qualified" targetNamespace="urn:idm.openiam.org/srvc/grp/dto" version="1.0">
<xs:import namespace="urn:idm.openiam.org/srvc/role/dto"/>
<xs:import namespace="urn:idm.openiam.org/srvc/role/service"/>
<xs:element name="Group" type="tns:Group"/>
<xs:complexType name="groupSet">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="groupObj" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="group" type="tns:Group"/>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="Group">
<xs:sequence>
<xs:element minOccurs="0" name="roles" type="ns1:roleSet"/>
<xs:element minOccurs="0" name="attributes" type="tns:groupAttributeMap"/>
<xs:element minOccurs="0" name="companyId" type="xs:string"/>
<xs:element minOccurs="0" name="createDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="createdBy" type="xs:string"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="groupClass" type="xs:string"/>
<xs:element minOccurs="0" name="grpId" type="xs:string"/>
<xs:element minOccurs="0" name="grpName" type="xs:string"/>
<xs:element minOccurs="0" name="inheritFromParent" type="xs:boolean"/>
<xs:element minOccurs="0" name="lastUpdate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="lastUpdatedBy" type="xs:string"/>
<xs:element minOccurs="0" name="parentGrpId" type="xs:string"/>
<xs:element minOccurs="0" name="provisionMethod" type="xs:string"/>
<xs:element minOccurs="0" name="provisionObjName" type="xs:string"/>
<xs:element minOccurs="0" name="status" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="subGroup" nillable="true" type="tns:Group"/>
<xs:element minOccurs="0" name="metadataTypeId" type="xs:string"/>
<xs:element minOccurs="0" name="selected" type="xs:boolean"/>
<xs:element minOccurs="0" name="ownerId" type="xs:string"/>
<xs:element minOccurs="0" name="internalGroupId" type="xs:string"/>
<xs:element minOccurs="0" name="operation" type="ns2:AttributeOperationEnum"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="groupAttributeMap">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="groupAttributeEntry" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" name="groupAttribute" type="tns:GroupAttribute"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="GroupAttribute">
<xs:sequence>
<xs:element minOccurs="0" name="id" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="value" type="xs:string"/>
<xs:element minOccurs="0" name="metadataElementId" type="xs:string"/>
<xs:element minOccurs="0" name="groupId" type="xs:string"/>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ns1="urn:idm.openiam.org/srvc/role/service" elementFormDefault="qualified" targetNamespace="urn:idm.openiam.org/srvc/continfo/dto" version="1.0">
<xs:import namespace="urn:idm.openiam.org/srvc/role/service"/>
<xs:complexType name="address">
<xs:sequence>
<xs:element minOccurs="0" name="isActive" type="xs:boolean"/>
<xs:element minOccurs="0" name="bldgNumber" type="xs:string"/>
<xs:element minOccurs="0" name="streetDirection" type="xs:string"/>
<xs:element minOccurs="0" name="suite" type="xs:string"/>
<xs:element minOccurs="0" name="address1" type="xs:string"/>
<xs:element minOccurs="0" name="address2" type="xs:string"/>
<xs:element minOccurs="0" name="address3" type="xs:string"/>
<xs:element minOccurs="0" name="address4" type="xs:string"/>
<xs:element minOccurs="0" name="address5" type="xs:string"/>
<xs:element minOccurs="0" name="address6" type="xs:string"/>
<xs:element minOccurs="0" name="address7" type="xs:string"/>
<xs:element minOccurs="0" name="addressId" type="xs:string"/>
<xs:element minOccurs="0" name="city" type="xs:string"/>
<xs:element minOccurs="0" name="country" type="xs:string"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="isDefault" type="xs:int"/>
<xs:element minOccurs="0" name="parentId" type="xs:string"/>
<xs:element minOccurs="0" name="parentType" type="xs:string"/>
<xs:element minOccurs="0" name="postalCd" type="xs:string"/>
<xs:element minOccurs="0" name="state" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="operation" type="ns1:AttributeOperationEnum"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="emailAddress">
<xs:sequence>
<xs:element minOccurs="0" name="isActive" type="xs:boolean"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="emailAddress" type="xs:string"/>
<xs:element minOccurs="0" name="emailId" type="xs:string"/>
<xs:element minOccurs="0" name="isDefault" type="xs:int"/>
<xs:element minOccurs="0" name="parentId" type="xs:string"/>
<xs:element minOccurs="0" name="parentType" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="operation" type="ns1:AttributeOperationEnum"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="phone">
<xs:sequence>
<xs:element minOccurs="0" name="isActive" type="xs:boolean"/>
<xs:element minOccurs="0" name="areaCd" type="xs:string"/>
<xs:element minOccurs="0" name="countryCd" type="xs:string"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="isDefault" type="xs:int"/>
<xs:element minOccurs="0" name="parentId" type="xs:string"/>
<xs:element minOccurs="0" name="parentType" type="xs:string"/>
<xs:element minOccurs="0" name="phoneExt" type="xs:string"/>
<xs:element minOccurs="0" name="phoneId" type="xs:string"/>
<xs:element minOccurs="0" name="phoneNbr" type="xs:string"/>
<xs:element minOccurs="0" name="phoneType" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="operation" type="ns1:AttributeOperationEnum"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addressMap">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="addressEntry" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element xmlns:ns2="urn:idm.openiam.org/srvc/continfo/dto" minOccurs="0" name="address" type="ns2:address"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="phoneMap">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="phoneEntry" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element xmlns:ns3="urn:idm.openiam.org/srvc/continfo/dto" minOccurs="0" name="phone" type="ns3:phone"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="emailAddressMap">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="emailAddressEntry" nillable="true">
<xs:complexType>
<xs:sequence>
<xs:element xmlns:ns4="urn:idm.openiam.org/srvc/continfo/dto" minOccurs="0" name="emailAddress" type="ns4:emailAddress"/>
</xs:sequence>
<xs:attribute name="key" type="xs:string"/>
</xs:complexType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="isUserInRole">
    <wsdl:part name="parameters" element="tns:isUserInRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRolesInGroup">
    <wsdl:part name="parameters" element="tns:getRolesInGroup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoleResponse">
    <wsdl:part name="parameters" element="tns:getRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addRoleResponse">
    <wsdl:part name="parameters" element="tns:addRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAllGroupsFromRole">
    <wsdl:part name="parameters" element="tns:removeAllGroupsFromRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAttributeResponse">
    <wsdl:part name="parameters" element="tns:removeAttributeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="assocUserToRole">
    <wsdl:part name="parameters" element="tns:assocUserToRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeUserFromRoleResponse">
    <wsdl:part name="parameters" element="tns:removeUserFromRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addAttributeResponse">
    <wsdl:part name="parameters" element="tns:addAttributeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateUserRoleAssocResponse">
    <wsdl:part name="parameters" element="tns:updateUserRoleAssocResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRoles">
    <wsdl:part name="parameters" element="tns:getUserRoles">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRolesByDomain">
    <wsdl:part name="parameters" element="tns:getUserRolesByDomain">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRole">
    <wsdl:part name="parameters" element="tns:getRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRolesAsFlatList">
    <wsdl:part name="parameters" element="tns:getUserRolesAsFlatList">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateUserRoleAssoc">
    <wsdl:part name="parameters" element="tns:updateUserRoleAssoc">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersInRoleResponse">
    <wsdl:part name="parameters" element="tns:getUsersInRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addRole">
    <wsdl:part name="parameters" element="tns:addRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRolesForUser">
    <wsdl:part name="parameters" element="tns:getUserRolesForUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeGroupFromRoleResponse">
    <wsdl:part name="parameters" element="tns:removeGroupFromRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addGroupToRole">
    <wsdl:part name="parameters" element="tns:addGroupToRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="searchResponse">
    <wsdl:part name="parameters" element="tns:searchResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRolesInDomain">
    <wsdl:part name="parameters" element="tns:getRolesInDomain">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttributeResponse">
    <wsdl:part name="parameters" element="tns:getAttributeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addAttribute">
    <wsdl:part name="parameters" element="tns:addAttribute">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllRolePolicies">
    <wsdl:part name="parameters" element="tns:getAllRolePolicies">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="assocUserToRoleResponse">
    <wsdl:part name="parameters" element="tns:assocUserToRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeGroupFromRole">
    <wsdl:part name="parameters" element="tns:removeGroupFromRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAttribute">
    <wsdl:part name="parameters" element="tns:removeAttribute">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isGroupInRoleResponse">
    <wsdl:part name="parameters" element="tns:isGroupInRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRolesResponse">
    <wsdl:part name="parameters" element="tns:getUserRolesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAttribute">
    <wsdl:part name="parameters" element="tns:updateAttribute">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupsInRoleResponse">
    <wsdl:part name="parameters" element="tns:getGroupsInRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAttribute">
    <wsdl:part name="parameters" element="tns:getAttribute">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRolesByDomainResponse">
    <wsdl:part name="parameters" element="tns:getUserRolesByDomainResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRolesAsFlatListResponse">
    <wsdl:part name="parameters" element="tns:getUserRolesAsFlatListResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRolePolicyResponse">
    <wsdl:part name="parameters" element="tns:removeRolePolicyResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRoleByIdResponse">
    <wsdl:part name="parameters" element="tns:getUserRoleByIdResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRolePolicy">
    <wsdl:part name="parameters" element="tns:updateRolePolicy">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAllAttributesResponse">
    <wsdl:part name="parameters" element="tns:removeAllAttributesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRolesInDomainResponse">
    <wsdl:part name="parameters" element="tns:getRolesInDomainResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeUserFromRole">
    <wsdl:part name="parameters" element="tns:removeUserFromRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAllAttributes">
    <wsdl:part name="parameters" element="tns:removeAllAttributes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRolesInGroupResponse">
    <wsdl:part name="parameters" element="tns:getRolesInGroupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addGroupToRoleResponse">
    <wsdl:part name="parameters" element="tns:addGroupToRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllAttributesResponse">
    <wsdl:part name="parameters" element="tns:getAllAttributesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllRoles">
    <wsdl:part name="parameters" element="tns:getAllRoles">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRolesDirectResponse">
    <wsdl:part name="parameters" element="tns:getUserRolesDirectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isGroupInRole">
    <wsdl:part name="parameters" element="tns:isGroupInRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserToRoleResponse">
    <wsdl:part name="parameters" element="tns:addUserToRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isUserInRoleResponse">
    <wsdl:part name="parameters" element="tns:isUserInRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addRolePolicyResponse">
    <wsdl:part name="parameters" element="tns:addRolePolicyResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllAttributes">
    <wsdl:part name="parameters" element="tns:getAllAttributes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRole">
    <wsdl:part name="parameters" element="tns:removeRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="search">
    <wsdl:part name="parameters" element="tns:search">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateAttributeResponse">
    <wsdl:part name="parameters" element="tns:updateAttributeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRole">
    <wsdl:part name="parameters" element="tns:updateRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserToRole">
    <wsdl:part name="parameters" element="tns:addUserToRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeAllGroupsFromRoleResponse">
    <wsdl:part name="parameters" element="tns:removeAllGroupsFromRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRolePolicyResponse">
    <wsdl:part name="parameters" element="tns:updateRolePolicyResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRolesDirect">
    <wsdl:part name="parameters" element="tns:getUserRolesDirect">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRolePolicy">
    <wsdl:part name="parameters" element="tns:getRolePolicy">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRolePolicy">
    <wsdl:part name="parameters" element="tns:removeRolePolicy">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoleResponse">
    <wsdl:part name="parameters" element="tns:removeRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersInRole">
    <wsdl:part name="parameters" element="tns:getUsersInRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRoleResponse">
    <wsdl:part name="parameters" element="tns:updateRoleResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllRolePoliciesResponse">
    <wsdl:part name="parameters" element="tns:getAllRolePoliciesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRolesForUserResponse">
    <wsdl:part name="parameters" element="tns:getUserRolesForUserResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRolePolicyResponse">
    <wsdl:part name="parameters" element="tns:getRolePolicyResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllRolesResponse">
    <wsdl:part name="parameters" element="tns:getAllRolesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupsInRole">
    <wsdl:part name="parameters" element="tns:getGroupsInRole">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserRoleById">
    <wsdl:part name="parameters" element="tns:getUserRoleById">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addRolePolicy">
    <wsdl:part name="parameters" element="tns:addRolePolicy">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="RoleDataService">
    <wsdl:operation name="getRolePolicy">
      <wsdl:input name="getRolePolicy" message="tns:getRolePolicy">
    </wsdl:input>
      <wsdl:output name="getRolePolicyResponse" message="tns:getRolePolicyResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllAttributes">
      <wsdl:input name="getAllAttributes" message="tns:getAllAttributes">
    </wsdl:input>
      <wsdl:output name="getAllAttributesResponse" message="tns:getAllAttributesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRolesAsFlatList">
      <wsdl:input name="getUserRolesAsFlatList" message="tns:getUserRolesAsFlatList">
    </wsdl:input>
      <wsdl:output name="getUserRolesAsFlatListResponse" message="tns:getUserRolesAsFlatListResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolesInDomain">
      <wsdl:input name="getRolesInDomain" message="tns:getRolesInDomain">
    </wsdl:input>
      <wsdl:output name="getRolesInDomainResponse" message="tns:getRolesInDomainResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeGroupFromRole">
      <wsdl:input name="removeGroupFromRole" message="tns:removeGroupFromRole">
    </wsdl:input>
      <wsdl:output name="removeGroupFromRoleResponse" message="tns:removeGroupFromRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRolesForUser">
      <wsdl:input name="getUserRolesForUser" message="tns:getUserRolesForUser">
    </wsdl:input>
      <wsdl:output name="getUserRolesForUserResponse" message="tns:getUserRolesForUserResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRolesByDomain">
      <wsdl:input name="getUserRolesByDomain" message="tns:getUserRolesByDomain">
    </wsdl:input>
      <wsdl:output name="getUserRolesByDomainResponse" message="tns:getUserRolesByDomainResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllGroupsFromRole">
      <wsdl:input name="removeAllGroupsFromRole" message="tns:removeAllGroupsFromRole">
    </wsdl:input>
      <wsdl:output name="removeAllGroupsFromRoleResponse" message="tns:removeAllGroupsFromRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRolePolicy">
      <wsdl:input name="updateRolePolicy" message="tns:updateRolePolicy">
    </wsdl:input>
      <wsdl:output name="updateRolePolicyResponse" message="tns:updateRolePolicyResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAttribute">
      <wsdl:input name="updateAttribute" message="tns:updateAttribute">
    </wsdl:input>
      <wsdl:output name="updateAttributeResponse" message="tns:updateAttributeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isUserInRole">
      <wsdl:input name="isUserInRole" message="tns:isUserInRole">
    </wsdl:input>
      <wsdl:output name="isUserInRoleResponse" message="tns:isUserInRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUsersInRole">
      <wsdl:input name="getUsersInRole" message="tns:getUsersInRole">
    </wsdl:input>
      <wsdl:output name="getUsersInRoleResponse" message="tns:getUsersInRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <wsdl:input name="addRole" message="tns:addRole">
    </wsdl:input>
      <wsdl:output name="addRoleResponse" message="tns:addRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllRolePolicies">
      <wsdl:input name="getAllRolePolicies" message="tns:getAllRolePolicies">
    </wsdl:input>
      <wsdl:output name="getAllRolePoliciesResponse" message="tns:getAllRolePoliciesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeRole">
      <wsdl:input name="removeRole" message="tns:removeRole">
    </wsdl:input>
      <wsdl:output name="removeRoleResponse" message="tns:removeRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRoles">
      <wsdl:input name="getUserRoles" message="tns:getUserRoles">
    </wsdl:input>
      <wsdl:output name="getUserRolesResponse" message="tns:getUserRolesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRole">
      <wsdl:input name="getRole" message="tns:getRole">
    </wsdl:input>
      <wsdl:output name="getRoleResponse" message="tns:getRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupsInRole">
      <wsdl:input name="getGroupsInRole" message="tns:getGroupsInRole">
    </wsdl:input>
      <wsdl:output name="getGroupsInRoleResponse" message="tns:getGroupsInRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeUserFromRole">
      <wsdl:input name="removeUserFromRole" message="tns:removeUserFromRole">
    </wsdl:input>
      <wsdl:output name="removeUserFromRoleResponse" message="tns:removeUserFromRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllAttributes">
      <wsdl:input name="removeAllAttributes" message="tns:removeAllAttributes">
    </wsdl:input>
      <wsdl:output name="removeAllAttributesResponse" message="tns:removeAllAttributesResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="assocUserToRole">
      <wsdl:input name="assocUserToRole" message="tns:assocUserToRole">
    </wsdl:input>
      <wsdl:output name="assocUserToRoleResponse" message="tns:assocUserToRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="search">
      <wsdl:input name="search" message="tns:search">
    </wsdl:input>
      <wsdl:output name="searchResponse" message="tns:searchResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRoleById">
      <wsdl:input name="getUserRoleById" message="tns:getUserRoleById">
    </wsdl:input>
      <wsdl:output name="getUserRoleByIdResponse" message="tns:getUserRoleByIdResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isGroupInRole">
      <wsdl:input name="isGroupInRole" message="tns:isGroupInRole">
    </wsdl:input>
      <wsdl:output name="isGroupInRoleResponse" message="tns:isGroupInRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRole">
      <wsdl:input name="updateRole" message="tns:updateRole">
    </wsdl:input>
      <wsdl:output name="updateRoleResponse" message="tns:updateRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRolesDirect">
      <wsdl:input name="getUserRolesDirect" message="tns:getUserRolesDirect">
    </wsdl:input>
      <wsdl:output name="getUserRolesDirectResponse" message="tns:getUserRolesDirectResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolesInGroup">
      <wsdl:input name="getRolesInGroup" message="tns:getRolesInGroup">
    </wsdl:input>
      <wsdl:output name="getRolesInGroupResponse" message="tns:getRolesInGroupResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateUserRoleAssoc">
      <wsdl:input name="updateUserRoleAssoc" message="tns:updateUserRoleAssoc">
    </wsdl:input>
      <wsdl:output name="updateUserRoleAssocResponse" message="tns:updateUserRoleAssocResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addAttribute">
      <wsdl:input name="addAttribute" message="tns:addAttribute">
    </wsdl:input>
      <wsdl:output name="addAttributeResponse" message="tns:addAttributeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addGroupToRole">
      <wsdl:input name="addGroupToRole" message="tns:addGroupToRole">
    </wsdl:input>
      <wsdl:output name="addGroupToRoleResponse" message="tns:addGroupToRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeRolePolicy">
      <wsdl:input name="removeRolePolicy" message="tns:removeRolePolicy">
    </wsdl:input>
      <wsdl:output name="removeRolePolicyResponse" message="tns:removeRolePolicyResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAttribute">
      <wsdl:input name="getAttribute" message="tns:getAttribute">
    </wsdl:input>
      <wsdl:output name="getAttributeResponse" message="tns:getAttributeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserToRole">
      <wsdl:input name="addUserToRole" message="tns:addUserToRole">
    </wsdl:input>
      <wsdl:output name="addUserToRoleResponse" message="tns:addUserToRoleResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRolePolicy">
      <wsdl:input name="addRolePolicy" message="tns:addRolePolicy">
    </wsdl:input>
      <wsdl:output name="addRolePolicyResponse" message="tns:addRolePolicyResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAttribute">
      <wsdl:input name="removeAttribute" message="tns:removeAttribute">
    </wsdl:input>
      <wsdl:output name="removeAttributeResponse" message="tns:removeAttributeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllRoles">
      <wsdl:input name="getAllRoles" message="tns:getAllRoles">
    </wsdl:input>
      <wsdl:output name="getAllRolesResponse" message="tns:getAllRolesResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="RoleDataWebServiceServiceSoapBinding" type="tns:RoleDataService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getAllAttributes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllAttributes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllAttributesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolePolicy">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRolePolicy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRolePolicyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRolesAsFlatList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserRolesAsFlatList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserRolesAsFlatListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolesInDomain">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRolesInDomain">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRolesInDomainResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeGroupFromRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeGroupFromRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeGroupFromRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRolesForUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserRolesForUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserRolesForUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRolesByDomain">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserRolesByDomain">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserRolesByDomainResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllGroupsFromRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeAllGroupsFromRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeAllGroupsFromRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRolePolicy">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateRolePolicy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateRolePolicyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isUserInRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isUserInRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isUserInRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUsersInRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUsersInRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUsersInRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllRolePolicies">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllRolePolicies">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllRolePoliciesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRoles">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserRoles">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserRolesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getGroupsInRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getGroupsInRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGroupsInRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeUserFromRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeUserFromRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeUserFromRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="assocUserToRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="assocUserToRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="assocUserToRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAllAttributes">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeAllAttributes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeAllAttributesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRoleById">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserRoleById">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserRoleByIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="search">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="search">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="searchResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="isGroupInRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isGroupInRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isGroupInRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUserRolesDirect">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserRolesDirect">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserRolesDirectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getRolesInGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getRolesInGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRolesInGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updateUserRoleAssoc">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateUserRoleAssoc">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateUserRoleAssocResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addGroupToRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addGroupToRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addGroupToRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeRolePolicy">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeRolePolicy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeRolePolicyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addRolePolicy">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addRolePolicy">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addRolePolicyResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addUserToRole">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addUserToRole">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addUserToRoleResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removeAttribute">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeAttribute">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeAttributeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getAllRoles">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllRoles">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllRolesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="RoleDataWebServiceService">
    <wsdl:port name="RoleDataServicePort" binding="tns:RoleDataWebServiceServiceSoapBinding">
      <soap:address location="http://localhost:9090/RoleDataServicePort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
