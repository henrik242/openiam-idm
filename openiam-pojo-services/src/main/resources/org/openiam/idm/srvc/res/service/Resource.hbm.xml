<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated Mar 8, 2009 12:54:32 PM by Hibernate Tools 3.2.2.GA -->
<hibernate-mapping>
    <class name="org.openiam.idm.srvc.res.dto.Resource" table="RES" >
        <cache usage="read-write"/>
    
        <id name="resourceId" type="string">
            <column name="RESOURCE_ID" length="32" />
            <generator class="uuid" />
        </id>
        <many-to-one name="resourceType" class="org.openiam.idm.srvc.res.dto.ResourceType" lazy="false">
            <column name="RESOURCE_TYPE_ID" length="20" />
        </many-to-one>
        <property name="description" type="string">
            <column name="DESCRIPTION" length="100" />
        </property>
        <property name="name" type="string">
            <column name="NAME" length="40" />
        </property>
         <!-- many-to-one  name="resourceParent" class="org.openiam.idm.srvc.res.dto.Resource" fetch="select">
            <column name="RESOURCE_PARENT" length="32" />
        </many-to-one-->
        <property name="resourceParent" type="string">
            <column name="RESOURCE_PARENT" length="32" />
        </property>
        <property name="branchId" type="string">
            <column name="BRANCH_ID" length="20" />
        </property>
        <property name="categoryId" type="string">
            <column name="CATEGORY_ID" length="20" />
        </property>
        <property name="displayOrder" type="java.lang.Integer">
            <column name="DISPLAY_ORDER" />
        </property>
        <property name="nodeLevel" type="java.lang.Integer">
            <column name="NODE_LEVEL" />
        </property>
        <property name="sensitiveApp" type="java.lang.Integer">
            <column name="SENSITIVE_APP" />
        </property>
        <property name="managedSysId" type="string">
            <column name="MANAGED_SYS_ID" />
        </property>
                
        
        <set name="resourceRoles" inverse="false" cascade="all" lazy="false">
            <key>
                <column name="RESOURCE_ID" length="32" not-null="true" />
            </key>
            <one-to-many class="org.openiam.idm.srvc.res.dto.ResourceRole" />
        </set>
        
        
       <set name="resourceProps" inverse="false" cascade="all"  lazy="false">
            <key>
                <column name="RESOURCE_ID" length="32" />
            </key>
            <one-to-many class="org.openiam.idm.srvc.res.dto.ResourceProp" />
        </set>
        <!-- best practice: for bidirectional one to many relationships set inverse as true 
        	many to one is ALWAYS inverse false 
        	HOWEVER, WE CANNOT USE BIDIRECTIONAL RELATIONSHIPS IN WEB SERVICE SO
        	WE NEED inverse false and manage this on the parent side i.e. resource
        <set name="resourceProps" inverse="true" cascade="all-delete-orphan" lazy="false">
            <key>
                <column name="RESOURCE_ID" length="32" />
            </key>
            <one-to-many class="org.openiam.idm.srvc.res.dto.ResourceProp" />
        </set-->
         <!--set name="resourceUsers" inverse="true" cascade="all-delete-orphan">
            <key>
                <column name="RESOURCE_ID" length="32" not-null="true" />
            </key>
            <one-to-many class="org.openiam.idm.srvc.res.dto.ResourceUser" />
        </set-->
        <!-- set name="resourcePolicies" inverse="true">
            <key>
                <column name="RESOURCE_ID" length="32" />
            </key>
            <one-to-many class="org.openiam.idm.srvc.res.dto.ResourcePolicy" />
        </set-->
    </class>
</hibernate-mapping>
