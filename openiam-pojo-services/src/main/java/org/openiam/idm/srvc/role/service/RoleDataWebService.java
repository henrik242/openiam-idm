
/*
 * 
 */

package org.openiam.idm.srvc.role.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.1.1
 * Wed Sep 03 17:56:50 EDT 2008
 * Generated source version: 2.1.1
 * 
 */
 
/*
 * 
 */

@WebServiceClient(name = "RoleDataWebService", 
                  wsdlLocation = "file:src/main/webapp/WEB-INF/wsdl/RoleDataService.wsdl",
                  targetNamespace = "urn:idm.openiam.org/srvc/role/service") 
public class RoleDataWebService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("urn:idm.openiam.org/srvc/role/service", "RoleDataWebService");
    public final static QName RoleDataServicePort = new QName("urn:idm.openiam.org/srvc/role/service", "RoleDataServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:src/main/webapp/WEB-INF/wsdl/RoleDataService.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:src/main/webapp/WEB-INF/wsdl/RoleDataService.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public RoleDataWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RoleDataWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RoleDataWebService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns RoleDataService
     */
    @WebEndpoint(name = "RoleDataServicePort")
    public RoleDataService getRoleDataServicePort() {
        return super.getPort(RoleDataServicePort, RoleDataService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RoleDataService
     */
    @WebEndpoint(name = "RoleDataServicePort")
    public RoleDataService getRoleDataServicePort(WebServiceFeature... features) {
        return super.getPort(RoleDataServicePort, RoleDataService.class, features);
    }

}
