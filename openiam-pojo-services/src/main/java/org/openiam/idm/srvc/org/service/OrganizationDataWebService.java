
/*
 * 
 */

package org.openiam.idm.srvc.org.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.1.1
 * Thu Aug 28 15:07:08 EDT 2008
 * Generated source version: 2.1.1
 * 
 */
 
/*
 * 
 */

@WebServiceClient(name = "OrganizationDataWebService", 
                  wsdlLocation = "file:src/main/webapp/WEB-INF/wsdl/OrganizationDataService.wsdl",
                  targetNamespace = "urn:idm.openiam.org/srvc/org/service") 
public class OrganizationDataWebService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("urn:idm.openiam.org/srvc/org/service", "OrganizationDataWebService");
    public final static QName OrganizationDataServicePort = new QName("urn:idm.openiam.org/srvc/org/service", "OrganizationDataServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:src/main/webapp/WEB-INF/wsdl/OrganizationDataService.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:src/main/webapp/WEB-INF/wsdl/OrganizationDataService.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public OrganizationDataWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public OrganizationDataWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OrganizationDataWebService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns OrganizationDataService
     */
    @WebEndpoint(name = "OrganizationDataServicePort")
    public OrganizationDataService getOrganizationDataServicePort() {
        return super.getPort(OrganizationDataServicePort, OrganizationDataService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OrganizationDataService
     */
    @WebEndpoint(name = "OrganizationDataServicePort")
    public OrganizationDataService getOrganizationDataServicePort(WebServiceFeature... features) {
        return super.getPort(OrganizationDataServicePort, OrganizationDataService.class, features);
    }

}
